{"version":3,"file":"index-17aba55c.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useMemo, useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { \n  Check, MapPin, Home, ListChecks, CalendarClock, MessageSquare, \n  Download, QrCode, Link2, Plus, ChevronRight, ChevronUp, ChevronDown, X, CheckCircle, \n  Clock, Phone, FileText, FolderOpen, Share2, UploadCloud, \n  Moon, Sun, Settings, Bell, Search, Filter, MoreVertical,\n  User, LogOut, HelpCircle, Info, Shield, Database, BarChart3, Target,\n  Upload, Trash2, AlertTriangle\n} from \"lucide-react\";\n\n// --- Mock Seed Data ---\nconst seedScripts = {\n  opener: [\n    {\n      id: \"op1\",\n      title: \"Door opener (15s)\",\n      content:\n        \"Hi! I'm local and helping neighbours shave a chunk off household bills—no obligation. I've popped a letter through; if you're open, I can check your postcode now and see if you qualify for the best UW bundles. Takes two minutes.\",\n    },\n    {\n      id: \"op2\",\n      title: \"Evening approach\",\n      content:\n        \"Good evening! I'm from UW and I've been helping families in this area save money on their bills. I left a letter earlier - have you had a chance to look at it?\",\n    },\n  ],\n  objection: [\n    {\n      id: \"ob1\",\n      title: \"Not interested → graceful exit\",\n      content:\n        \"Totally fine. If things change, the letter's got a QR to a 60‑second checker—no sales calls, just the numbers. Have a great day!\",\n    },\n    {\n      id: \"ob2\",\n      title: \"Already with UW\",\n      content:\n        \"That's great! You might be eligible for additional savings or better bundles. Would you like me to check your current setup?\",\n    },\n  ],\n  closer: [\n    {\n      id: \"cl1\",\n      title: \"Soft close\",\n      content:\n        \"If you text me your postcode I'll send a quick checker link—no pressure. If it looks good, we can book a 10‑minute run‑through.\",\n    },\n    {\n      id: \"cl2\",\n      title: \"Follow-up close\",\n      content:\n        \"Perfect! I'll send you the details and we can arrange a time that works for you. When would be best?\",\n    },\n  ],\n  sms: [\n    {\n      id: \"sm1\",\n      title: \"WhatsApp Prefill CTA\",\n      content:\n        \"Hi Alex, I've got your Neighbour Letter. My postcode is _______. Can you check if I'm eligible for the best bundle?\",\n    },\n    {\n      id: \"sm2\",\n      title: \"Follow-up reminder\",\n      content:\n        \"Hi! Just following up on our conversation about UW savings. Are you still interested in checking your eligibility?\",\n    },\n  ],\n};\n\nconst seedCampaigns = [\n  {\n    id: \"c1\",\n    name: \"Elmswell NL – Aug 2025\",\n    area: \"IP30\",\n    status: \"active\",\n    created_at: \"2025-08-01\",\n    links: {\n      connector: \"https://example.com/connector\",\n      quote: \"https://example.com/quote\",\n      booking: \"https://example.com/book\",\n      faq: \"https://example.com/faq\",\n    },\n    streets: [\n      {\n        id: \"s1\",\n        name: \"Orchard Way\",\n        postcode: \"IP30 9XX\",\n        status: \"in_progress\",\n        properties: [\n          { id: \"p1\", label: \"1\", dropped: true, knocked: true, spoke: false, result: \"no_answer\" },\n          { id: \"p2\", label: \"3\", dropped: true, knocked: true, spoke: true, result: \"maybe\", followUpAt: \"2025-08-16T18:00:00\" },\n          { id: \"p3\", label: \"5\", dropped: true, knocked: false, spoke: false, result: \"none\" },\n        ],\n      },\n      {\n        id: \"s2\",\n        name: \"Station Road\",\n        postcode: \"IP30 9YY\",\n        status: \"not_started\",\n        properties: [\n          { id: \"p4\", label: \"12\", dropped: false, knocked: false, spoke: false, result: \"none\" },\n          { id: \"p5\", label: \"14\", dropped: false, knocked: false, spoke: false, result: \"none\" },\n        ],\n      },\n    ],\n  },\n  {\n    id: \"c2\",\n    name: \"Stowmarket NL – Sept 2025\",\n    area: \"IP14\",\n    status: \"draft\",\n    created_at: \"2025-08-15\",\n    links: {\n      connector: \"https://example.com/connector\",\n      quote: \"https://example.com/quote\",\n      booking: \"https://example.com/book\",\n      faq: \"https://example.com/faq\",\n    },\n    streets: [],\n  },\n];\n\n// Utility components\nconst Chip = ({ children, variant = \"default\", className = \"\" }) => {\n  const variants = {\n    default: \"bg-gray-100 text-gray-700 dark:bg-gray-800 dark:text-gray-300\",\n    primary: \"bg-primary-100 text-primary-700 dark:bg-primary-900/40 dark:text-primary-300\",\n    success: \"bg-secondary-100 text-secondary-700 dark:bg-secondary-900/40 dark:text-secondary-300\",\n    warning: \"bg-warning-100 text-warning-700 dark:bg-warning-900/40 dark:text-warning-300\",\n    error: \"bg-error-100 text-error-700 dark:bg-error-900/40 dark:text-error-300\",\n  };\n  \n  return (\n    <span className={`inline-flex items-center text-xs px-2 py-1 rounded-full shadow-sm ${variants[variant]} ${className}`}>\n      {children}\n    </span>\n  );\n};\n\nconst SectionCard = ({ title, icon: Icon, children, actions, className = \"\" }) => (\n  <div className={`rounded-2xl shadow-soft p-4 bg-white/70 dark:bg-gray-900/70 backdrop-blur border border-gray-200/50 dark:border-gray-800/50 ${className}`}>\n    <div className=\"flex items-center justify-between mb-3\">\n      <div className=\"flex items-center gap-2\">\n        {Icon && <Icon className=\"w-5 h-5 text-primary-600\" />}\n        <h3 className=\"text-lg font-semibold\">{title}</h3>\n      </div>\n      <div className=\"flex gap-2\">{actions}</div>\n    </div>\n    {children}\n  </div>\n);\n\nconst Drawer = ({ open, onClose, title, children, size = \"default\" }) => {\n  const sizes = {\n    small: \"max-h-[60vh]\",\n    default: \"max-h-[80vh]\",\n    large: \"max-h-[90vh]\",\n  };\n  \n  return (\n    <AnimatePresence>\n      {open && (\n        <motion.div \n          className=\"fixed inset-0 z-50\" \n          initial={{ opacity: 0 }} \n          animate={{ opacity: 1 }} \n          exit={{ opacity: 0 }}\n        >\n          <div className=\"absolute inset-0 bg-black/40\" onClick={onClose} />\n          <motion.div\n            initial={{ y: \"100%\" }}\n            animate={{ y: 0 }}\n            exit={{ y: \"100%\" }}\n            transition={{ type: \"spring\", stiffness: 120, damping: 16 }}\n            className={`absolute bottom-0 left-0 right-0 bg-white dark:bg-gray-900 rounded-t-3xl p-4 ${sizes[size]} overflow-y-auto`}\n          >\n            <div className=\"flex items-center justify-between mb-3\">\n              <h3 className=\"text-base font-semibold\">{title}</h3>\n              <button \n                className=\"p-2 rounded-xl bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\" \n                onClick={onClose}\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n            {children}\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\n// --- Main App ---\nexport default function App() {\n  const [dark, setDark] = useState(true);\n  const [view, setView] = useState(\"dashboard\");\n  const [campaigns, setCampaigns] = useState(seedCampaigns);\n  const [activeCampaignId, setActiveCampaignId] = useState(\"c1\");\n  const [activeStreetId, setActiveStreetId] = useState(\"s1\");\n  const [activePropertyId, setActivePropertyId] = useState(\"p2\");\n  const [showScripts, setShowScripts] = useState(false);\n  const [showLinks, setShowLinks] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [showResetModal, setShowResetModal] = useState(false);\n  const [showNewCampaignModal, setShowNewCampaignModal] = useState(false);\n  const [showNewStreetModal, setShowNewStreetModal] = useState(false);\n  const [showImportStreetsModal, setShowImportStreetsModal] = useState(false);\n  const [showEditCampaignModal, setShowEditCampaignModal] = useState(false);\n  const [showEditStreetModal, setShowEditStreetModal] = useState(false);\n  const [showPropertyManagerModal, setShowPropertyManagerModal] = useState(false);\n  const [editingCampaign, setEditingCampaign] = useState(null);\n  const [editingStreet, setEditingStreet] = useState(null);\n  const [showHelp, setShowHelp] = useState(false);\n  const [showAbout, setShowAbout] = useState(false);\n  const [showSuccessTips, setShowSuccessTips] = useState(false);\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  // Address lookup state\n  const [addressSearchTerm, setAddressSearchTerm] = useState(\"\");\n  const [addressSuggestions, setAddressSuggestions] = useState([]);\n  const [selectedPostcode, setSelectedPostcode] = useState(\"\");\n  const [selectedTown, setSelectedTown] = useState(\"\");\n  const [availableStreets, setAvailableStreets] = useState([]);\n  const [selectedStreets, setSelectedStreets] = useState([]);\n  const [isLoadingAddresses, setIsLoadingAddresses] = useState(false);\n  const [addressLookupStep, setAddressLookupStep] = useState(\"search\"); // search, select, import\n\n  const activeCampaign = useMemo(() => campaigns.find(c => c.id === activeCampaignId), [campaigns, activeCampaignId]);\n  const activeStreet = useMemo(() => activeCampaign?.streets.find(s => s.id === activeStreetId), [activeCampaign, activeStreetId]);\n  const activeProperty = useMemo(() => activeStreet?.properties.find(p => p.id === activePropertyId), [activeStreet, activePropertyId]);\n\n  // Derived stats for dashboard\n  const stats = useMemo(() => {\n    let letters = 0, convos = 0, interested = 0, followups = 0;\n    let outcomes = {\n      interested: 0,\n      customer_signed: 0,\n      appointment_booked: 0,\n      no_for_now: 0,\n      already_uw: 0,\n      not_interested: 0\n    };\n    \n    const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD format\n    \n    activeCampaign?.streets.forEach(s => {\n      s.properties.forEach(p => {\n        // Check if activity was logged today\n        const droppedToday = p.dropped && p.droppedAt === today;\n        const spokeToday = p.spoke && p.spokeAt === today;\n        const resultToday = p.result && p.resultAt === today;\n        const followUpToday = p.followUpAt && p.followUpAt.startsWith(today);\n        \n        if (droppedToday) letters++;\n        if (spokeToday) convos++;\n        if (resultToday && (p.result === \"interested\" || p.result === \"customer_signed\" || p.result === \"appointment_booked\")) interested++;\n        if (followUpToday) followups++;\n        \n        // Track today's outcomes\n        if (resultToday && p.result !== 'none') {\n          outcomes[p.result] = (outcomes[p.result] || 0) + 1;\n        }\n      });\n    });\n    return { letters, convos, interested, followups, outcomes };\n  }, [activeCampaign]);\n\n  const setProperty = (updates) => {\n    const today = new Date().toISOString().split('T')[0];\n    \n    setCampaigns(prev => prev.map(c => {\n      if (c.id !== activeCampaignId) return c;\n      \n      // Update the campaign's streets and properties\n      const updatedCampaign = {\n        ...c,\n        streets: c.streets.map(s => {\n          if (s.id !== activeStreetId) return s;\n          return {\n            ...s,\n            properties: s.properties.map(p => {\n              if (p.id === activePropertyId) {\n                const newUpdates = { ...updates };\n                // Add timestamp for result changes\n                if (updates.result) {\n                  newUpdates.resultAt = today;\n                }\n                // Add timestamp for followUpAt changes\n                if (updates.followUpAt) {\n                  newUpdates.followUpAt = updates.followUpAt;\n                }\n                return { ...p, ...newUpdates };\n              }\n              return p;\n            })\n          };\n        })\n      };\n      \n      // Auto-update campaign status based on activity\n      const totalProperties = updatedCampaign.streets.reduce((total, street) => total + street.properties.length, 0);\n      const droppedProperties = updatedCampaign.streets.reduce((total, street) => \n        total + street.properties.filter(p => p.dropped).length, 0);\n      const spokeProperties = updatedCampaign.streets.reduce((total, street) => \n        total + street.properties.filter(p => p.spoke).length, 0);\n      \n      let newStatus = updatedCampaign.status;\n      \n      // Update to \"active\" if any properties have been dropped\n      if (droppedProperties > 0 && newStatus === \"draft\") {\n        newStatus = \"active\";\n      }\n      \n      // Update to \"completed\" if all properties have been handled (spoke OR not interested OR unreachable)\n      const handledProperties = updatedCampaign.streets.reduce((total, street) => \n        total + street.properties.filter(p => p.spoke || p.result === \"not_interested\" || p.result === \"unreachable\").length, 0);\n      \n      if (totalProperties > 0 && handledProperties === totalProperties) {\n        newStatus = \"completed\";\n      }\n      \n      // Also update street status\n      const updatedStreets = updatedCampaign.streets.map(street => {\n        const streetTotalProperties = street.properties.length;\n        const streetDroppedProperties = street.properties.filter(p => p.dropped).length;\n        const streetSpokeProperties = street.properties.filter(p => p.spoke).length;\n        \n        let streetStatus = street.status;\n        \n        // Update to \"in_progress\" if any properties have been dropped\n        if (streetDroppedProperties > 0 && streetStatus === \"not_started\") {\n          streetStatus = \"in_progress\";\n        }\n        \n        // Update to \"completed\" if all properties have been handled (spoke OR not interested OR unreachable)\n        const streetHandledProperties = street.properties.filter(p => p.spoke || p.result === \"not_interested\" || p.result === \"unreachable\").length;\n        if (streetTotalProperties > 0 && streetHandledProperties === streetTotalProperties) {\n          streetStatus = \"completed\";\n        }\n        \n        return {\n          ...street,\n          status: streetStatus\n        };\n      });\n      \n      return {\n        ...updatedCampaign,\n        streets: updatedStreets,\n        status: newStatus\n      };\n    }));\n  };\n\n  const toggleDark = () => setDark(d => !d);\n\n  // Data management functions\n  const exportData = () => {\n    const data = {\n      campaigns,\n      settings: { dark },\n      exportDate: new Date().toISOString(),\n      version: '1.0.0'\n    };\n    \n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `uw-street-smart-data-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const importData = (file) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = JSON.parse(e.target.result);\n        if (data.campaigns && Array.isArray(data.campaigns)) {\n          setCampaigns(data.campaigns);\n          if (data.settings?.dark !== undefined) {\n            setDark(data.settings.dark);\n          }\n          setShowImportModal(false);\n          alert('Data imported successfully!');\n        } else {\n          alert('Invalid data format. Please select a valid export file.');\n        }\n      } catch (error) {\n        alert('Error importing data. Please check the file format.');\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const resetData = () => {\n    setShowResetModal(true);\n  };\n\n  const confirmReset = () => {\n    // Reset to truly empty state with just one empty campaign\n    const emptyCampaigns = [\n      {\n        id: \"new-campaign\",\n        name: \"New Campaign\",\n        area: \"\",\n        status: \"draft\",\n        created_at: new Date().toISOString().split('T')[0],\n        links: {\n          connector: \"\",\n          quote: \"\",\n          booking: \"\",\n          faq: \"\",\n        },\n        streets: [],\n      }\n    ];\n    \n    setCampaigns(emptyCampaigns);\n    setActiveCampaignId(\"new-campaign\");\n    setActiveStreetId(\"\");\n    setActivePropertyId(\"\");\n    setShowResetModal(false);\n    alert('All data has been cleared. You can now start fresh with a new campaign.');\n  };\n\n  // Campaign and Street management functions\n  const createNewCampaign = (campaignData) => {\n    const newCampaign = {\n      id: `campaign-${Date.now()}`,\n      name: campaignData.name,\n      area: campaignData.area,\n      status: \"draft\",\n      created_at: new Date().toISOString().split('T')[0],\n      links: {\n        connector: campaignData.connector || \"\",\n        quote: campaignData.quote || \"\",\n        booking: campaignData.booking || \"\",\n        faq: campaignData.faq || \"\",\n      },\n      streets: [],\n    };\n    \n    setCampaigns(prev => [...prev, newCampaign]);\n    setActiveCampaignId(newCampaign.id);\n    setShowNewCampaignModal(false);\n    alert('New campaign created successfully!');\n  };\n\n  const createNewStreet = (streetData) => {\n    const newStreet = {\n      id: `street-${Date.now()}`,\n      name: streetData.name,\n      postcode: streetData.postcode,\n      status: \"not_started\",\n      properties: streetData.properties.map((prop, index) => ({\n        id: `property-${Date.now()}-${index}`,\n        label: prop,\n        dropped: false,\n        knocked: false,\n        spoke: false,\n        result: \"none\"\n      }))\n    };\n    \n    setCampaigns(prev => prev.map(c => {\n      if (c.id === activeCampaignId) {\n        const updatedCampaign = {\n          ...c,\n          streets: [...c.streets, newStreet]\n        };\n        \n        // Auto-update campaign status to \"active\" when first street is added\n        if (c.streets.length === 0 && updatedCampaign.status === \"draft\") {\n          return {\n            ...updatedCampaign,\n            status: \"active\"\n          };\n        }\n        \n        return updatedCampaign;\n      }\n      return c;\n    }));\n    \n    setActiveStreetId(newStreet.id);\n    setShowNewStreetModal(false);\n    alert('New street added successfully!');\n  };\n\n  // Edit campaign function\n  const editCampaign = (campaignData) => {\n    setCampaigns(prev => prev.map(c => {\n      if (c.id === editingCampaign.id) {\n        return {\n          ...c,\n          name: campaignData.name,\n          area: campaignData.area,\n          links: {\n            connector: campaignData.connector || \"\",\n            quote: campaignData.quote || \"\",\n            booking: campaignData.booking || \"\",\n            faq: campaignData.faq || \"\",\n          }\n        };\n      }\n      return c;\n    }));\n    setShowEditCampaignModal(false);\n    setEditingCampaign(null);\n    alert('Campaign updated successfully!');\n  };\n\n  // Delete campaign function\n  const deleteCampaign = (campaignId) => {\n    if (confirm('Are you sure you want to delete this campaign? This action cannot be undone.')) {\n      setCampaigns(prev => prev.filter(c => c.id !== campaignId));\n      if (activeCampaignId === campaignId) {\n        const remainingCampaigns = campaigns.filter(c => c.id !== campaignId);\n        if (remainingCampaigns.length > 0) {\n          setActiveCampaignId(remainingCampaigns[0].id);\n        } else {\n          setActiveCampaignId(\"\");\n        }\n      }\n      alert('Campaign deleted successfully!');\n    }\n  };\n\n  // Edit street function\n  const editStreet = (streetData) => {\n    setCampaigns(prev => prev.map(c => {\n      if (c.id === activeCampaignId) {\n        return {\n          ...c,\n          streets: c.streets.map(s => {\n            if (s.id === editingStreet.id) {\n              return {\n                ...s,\n                name: streetData.name,\n                postcode: streetData.postcode\n              };\n            }\n            return s;\n          })\n        };\n      }\n      return c;\n    }));\n    setShowEditStreetModal(false);\n    setEditingStreet(null);\n    alert('Street updated successfully!');\n  };\n\n  // Delete street function\n  const deleteStreet = (streetId) => {\n    if (confirm('Are you sure you want to delete this street? This action cannot be undone.')) {\n      setCampaigns(prev => prev.map(c => {\n        if (c.id === activeCampaignId) {\n          return {\n            ...c,\n            streets: c.streets.filter(s => s.id !== streetId)\n          };\n        }\n        return c;\n      }));\n      if (activeStreetId === streetId) {\n        const activeCampaign = campaigns.find(c => c.id === activeCampaignId);\n        const remainingStreets = activeCampaign?.streets.filter(s => s.id !== streetId) || [];\n        if (remainingStreets.length > 0) {\n          setActiveStreetId(remainingStreets[0].id);\n        } else {\n          setActiveStreetId(\"\");\n        }\n      }\n      alert('Street deleted successfully!');\n    }\n  };\n\n  // Property management functions\n  const addProperty = (propertyLabel) => {\n    const newProperty = {\n      id: `property-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      label: propertyLabel,\n      dropped: false,\n      knocked: false,\n      spoke: false,\n      result: \"none\",\n      droppedAt: null,\n      knockedAt: null,\n      spokeAt: null,\n      resultAt: null\n    };\n    \n    setCampaigns(prev => prev.map(c => {\n      if (c.id === activeCampaignId) {\n        return {\n          ...c,\n          streets: c.streets.map(s => {\n            if (s.id === activeStreetId) {\n              return {\n                ...s,\n                properties: [...s.properties, newProperty]\n              };\n            }\n            return s;\n          })\n        };\n      }\n      return c;\n    }));\n  };\n\n  const removeProperty = (propertyId) => {\n    if (confirm('Are you sure you want to remove this property?')) {\n      setCampaigns(prev => prev.map(c => {\n        if (c.id === activeCampaignId) {\n          return {\n            ...c,\n            streets: c.streets.map(s => {\n              if (s.id === activeStreetId) {\n                return {\n                  ...s,\n                  properties: s.properties.filter(p => p.id !== propertyId)\n                };\n              }\n              return s;\n            })\n          };\n        }\n        return c;\n      }));\n    }\n  };\n\n  const editPropertyLabel = (propertyId, newLabel) => {\n    setCampaigns(prev => prev.map(c => {\n      if (c.id === activeCampaignId) {\n        return {\n          ...c,\n          streets: c.streets.map(s => {\n            if (s.id === activeStreetId) {\n              return {\n                ...s,\n                properties: s.properties.map(p => {\n                  if (p.id === propertyId) {\n                    return { ...p, label: newLabel };\n                  }\n                  return p;\n                })\n              };\n            }\n            return s;\n          })\n        };\n      }\n      return c;\n    }));\n  };\n\n  // Toggle property status (allows removing status)\n  const togglePropertyStatus = (propertyId, status) => {\n    const today = new Date().toISOString().split('T')[0];\n    \n    setCampaigns(prev => prev.map(c => {\n      if (c.id !== activeCampaignId) return c;\n      \n      // Update the campaign's streets and properties\n      const updatedCampaign = {\n        ...c,\n        streets: c.streets.map(s => {\n          if (s.id !== activeStreetId) return s;\n          return {\n            ...s,\n            properties: s.properties.map(p => {\n              if (p.id === propertyId) {\n                const newValue = !p[status];\n                const timestampKey = `${status}At`;\n                return { \n                  ...p, \n                  [status]: newValue,\n                  [timestampKey]: newValue ? today : null // Set timestamp when enabling, clear when disabling\n                };\n              }\n              return p;\n            })\n          };\n        })\n      };\n      \n      // Auto-update campaign status based on activity\n      const totalProperties = updatedCampaign.streets.reduce((total, street) => total + street.properties.length, 0);\n      const droppedProperties = updatedCampaign.streets.reduce((total, street) => \n        total + street.properties.filter(p => p.dropped).length, 0);\n      const spokeProperties = updatedCampaign.streets.reduce((total, street) => \n        total + street.properties.filter(p => p.spoke).length, 0);\n      \n      let newStatus = updatedCampaign.status;\n      \n      // Update to \"active\" if any properties have been dropped\n      if (droppedProperties > 0 && newStatus === \"draft\") {\n        newStatus = \"active\";\n      }\n      \n      // Update to \"completed\" if all properties have been handled (spoke OR not interested OR unreachable)\n      const handledProperties = updatedCampaign.streets.reduce((total, street) => \n        total + street.properties.filter(p => p.spoke || p.result === \"not_interested\" || p.result === \"unreachable\").length, 0);\n      \n      if (totalProperties > 0 && handledProperties === totalProperties) {\n        newStatus = \"completed\";\n      }\n      \n      // Also update street status\n      const updatedStreets = updatedCampaign.streets.map(street => {\n        const streetTotalProperties = street.properties.length;\n        const streetDroppedProperties = street.properties.filter(p => p.dropped).length;\n        const streetSpokeProperties = street.properties.filter(p => p.spoke).length;\n        \n        let streetStatus = street.status;\n        \n        // Update to \"in_progress\" if any properties have been dropped\n        if (streetDroppedProperties > 0 && streetStatus === \"not_started\") {\n          streetStatus = \"in_progress\";\n        }\n        \n        // Update to \"completed\" if all properties have been handled (spoke OR not interested OR unreachable)\n        const streetHandledProperties = street.properties.filter(p => p.spoke || p.result === \"not_interested\" || p.result === \"unreachable\").length;\n        if (streetTotalProperties > 0 && streetHandledProperties === streetTotalProperties) {\n          streetStatus = \"completed\";\n        }\n        \n        return {\n          ...street,\n          status: streetStatus\n        };\n      });\n      \n      return {\n        ...updatedCampaign,\n        streets: updatedStreets,\n        status: newStatus\n      };\n    }));\n  };\n\n  // Address lookup functions\n  const searchAddresses = async (searchTerm) => {\n    if (!searchTerm || searchTerm.length < 3) {\n      setAddressSuggestions([]);\n      return;\n    }\n\n    setIsLoadingAddresses(true);\n    try {\n      // Use the broader postcode search (works for both postcodes and place names)\n      const response = await fetch(`https://api.postcodes.io/postcodes?q=${encodeURIComponent(searchTerm)}`);\n      if (response.ok) {\n        const data = await response.json();\n        if (data.result && data.result.length > 0) {\n          // Format the results to show postcode and area information\n          const formattedSuggestions = data.result.map(item => ({\n            display: `${item.postcode} - ${item.admin_district || item.admin_ward || item.parish || 'Unknown area'}`,\n            value: item.postcode,\n            postcode: item.postcode,\n            admin_district: item.admin_district,\n            admin_ward: item.admin_ward,\n            parish: item.parish\n          }));\n          setAddressSuggestions(formattedSuggestions);\n          return;\n        }\n      }\n      \n      setAddressSuggestions([]);\n    } catch (error) {\n      console.error('Error searching addresses:', error);\n      setAddressSuggestions([]);\n    } finally {\n      setIsLoadingAddresses(false);\n    }\n  };\n\n  const selectAddress = async (suggestion) => {\n    // Handle both string postcodes and object suggestions\n    const postcode = typeof suggestion === 'string' ? suggestion : suggestion.postcode || suggestion.value;\n    setSelectedPostcode(postcode);\n    setIsLoadingAddresses(true);\n    \n    try {\n      // Get postcode details\n      const response = await fetch(`https://api.postcodes.io/postcodes/${postcode}`);\n      if (response.ok) {\n        const data = await response.json();\n        setSelectedTown(data.result.admin_district || data.result.admin_ward || 'Unknown');\n        \n        // Get streets for this postcode using the correct endpoint\n        const streetsResponse = await fetch(`https://api.postcodes.io/postcodes/${postcode}/autocomplete`);\n        if (streetsResponse.ok) {\n          const streetsData = await streetsResponse.json();\n          // The autocomplete endpoint returns street names for the postcode\n          const streets = streetsData.result || [];\n          setAvailableStreets(streets);\n          setAddressLookupStep(\"select\");\n        } else {\n          // Fallback: create some generic street names if API fails\n          setAvailableStreets(['High Street', 'Main Street', 'Church Street', 'Station Road']);\n          setAddressLookupStep(\"select\");\n        }\n      }\n    } catch (error) {\n      console.error('Error getting address details:', error);\n      // Fallback: create some generic street names if API fails\n      setAvailableStreets(['High Street', 'Main Street', 'Church Street', 'Station Road']);\n      setAddressLookupStep(\"select\");\n    } finally {\n      setIsLoadingAddresses(false);\n    }\n  };\n\n  const toggleStreetSelection = (street) => {\n    setSelectedStreets(prev => {\n      const isSelected = prev.some(s => s === street);\n      if (isSelected) {\n        return prev.filter(s => s !== street);\n      } else {\n        return [...prev, street];\n      }\n    });\n  };\n\n  const importSelectedStreets = () => {\n    const newStreets = selectedStreets.map((streetName, index) => ({\n      id: `street-${Date.now()}-${index}`,\n      name: streetName,\n      postcode: selectedPostcode,\n      status: \"not_started\",\n      properties: [\n        // Generate some default properties (1, 3, 5, etc.)\n        { id: `property-${Date.now()}-${index}-1`, label: \"1\", dropped: false, knocked: false, spoke: false, result: \"none\" },\n        { id: `property-${Date.now()}-${index}-3`, label: \"3\", dropped: false, knocked: false, spoke: false, result: \"none\" },\n        { id: `property-${Date.now()}-${index}-5`, label: \"5\", dropped: false, knocked: false, spoke: false, result: \"none\" },\n      ]\n    }));\n\n    // Add streets to the current campaign\n    setCampaigns(prev => prev.map(c => {\n      if (c.id === activeCampaignId) {\n        return {\n          ...c,\n          streets: [...c.streets, ...newStreets]\n        };\n      }\n      return c;\n    }));\n\n    // Reset address lookup state\n    setAddressSearchTerm(\"\");\n    setAddressSuggestions([]);\n    setSelectedPostcode(\"\");\n    setSelectedTown(\"\");\n    setAvailableStreets([]);\n    setSelectedStreets([]);\n    setAddressLookupStep(\"search\");\n\n    alert(`Successfully imported ${newStreets.length} streets!`);\n    \n    // Close the import modal if it's open\n    setShowImportStreetsModal(false);\n  };\n\n  const resetAddressLookup = () => {\n    setAddressSearchTerm(\"\");\n    setAddressSuggestions([]);\n    setSelectedPostcode(\"\");\n    setSelectedTown(\"\");\n    setAvailableStreets([]);\n    setSelectedStreets([]);\n    setAddressLookupStep(\"search\");\n  };\n\n  // Online/offline detection\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  // Theme management\n  useEffect(() => {\n    document.documentElement.classList.toggle('dark', dark);\n    document.documentElement.setAttribute('data-theme', dark ? 'dark' : 'light');\n  }, [dark]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-950 dark:to-gray-900 text-gray-900 dark:text-gray-50\">\n      {/* Top Bar */}\n      <div className=\"sticky top-0 z-40 backdrop-blur bg-white/60 dark:bg-gray-950/60 border-b border-gray-200/50 dark:border-gray-800/50\">\n        <div className=\"max-w-6xl mx-auto px-4 py-3 flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-9 h-9 rounded-2xl bg-primary-600 flex items-center justify-center shadow text-white font-bold\">UW</div>\n            <div>\n              <div className=\"font-semibold leading-tight\">Street Smart</div>\n              <div className=\"text-xs opacity-70\">NL Activity Tracker</div>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            {/* Mobile: Simplified status indicators */}\n            <div className=\"lg:hidden flex items-center gap-1\">\n              {!isOnline && (\n                <div className=\"w-2 h-2 rounded-full bg-yellow-500\"></div>\n              )}\n            </div>\n            \n            {/* Desktop: Full status chips */}\n            <div className=\"hidden lg:flex items-center gap-2\">\n              {!isOnline && (\n                <Chip variant=\"warning\" className=\"text-xs\">\n                  <Clock className=\"w-3 h-3 mr-1\" />\n                  Offline\n                </Chip>\n              )}\n              <Chip variant=\"success\" className=\"text-xs\">\n                <Database className=\"w-3 h-3 mr-1\" />\n                Local storage\n              </Chip>\n            </div>\n            \n            <button \n              onClick={toggleDark} \n              className=\"p-2 rounded-xl bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n            >\n              {dark ? <Sun className=\"w-4 h-4 lg:w-5 lg:h-5\"/> : <Moon className=\"w-4 h-4 lg:w-5 lg:h-5\"/>}\n            </button>\n            <button \n              onClick={() => setShowHelp(true)}\n              className=\"p-2 rounded-xl bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n            >\n              <HelpCircle className=\"w-4 h-4 lg:w-5 lg:h-5\" />\n            </button>\n            <button \n              onClick={() => setShowSettings(true)}\n              className=\"p-2 rounded-xl bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n            >\n              <Settings className=\"w-4 h-4 lg:w-5 lg:h-5\" />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Navigation Bar */}\n      <div className=\"lg:hidden sticky top-16 z-30 bg-white/80 dark:bg-gray-950/80 backdrop-blur border-b border-gray-200/50 dark:border-gray-800/50\">\n        <div className=\"max-w-6xl mx-auto px-4 py-2\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-1\">\n              <NavButton icon={<BarChart3 className=\"w-4 h-4 flex-shrink-0\"/>} label=\"Dashboard\" active={view === \"dashboard\"} onClick={() => setView(\"dashboard\")} />\n              <NavButton icon={<Target className=\"w-4 h-4 flex-shrink-0\"/>} label=\"Campaigns\" active={view === \"campaigns\"} onClick={() => setView(\"campaigns\")} />\n              <NavButton icon={<MapPin className=\"w-4 h-4 flex-shrink-0\"/>} label=\"Streets\" active={view === \"streets\"} onClick={() => setView(\"streets\")} />\n              <NavButton icon={<FileText className=\"w-4 h-4 flex-shrink-0\"/>} label=\"Reports\" active={view === \"reports\"} onClick={() => setView(\"reports\")} />\n            </div>\n            {activeCampaign && (\n              <div className=\"text-xs opacity-70 truncate max-w-32\">\n                {activeCampaign.name}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Content Area */}\n      <div className=\"max-w-7xl mx-auto px-4 py-3 lg:py-6 grid grid-cols-1 lg:grid-cols-4 gap-4 lg:gap-6\">\n        {/* Sidebar - Hidden on mobile */}\n        <div className=\"hidden lg:block lg:col-span-1 space-y-3\">\n          <SectionCard title=\"Navigate\" icon={FolderOpen}>\n            <div className=\"grid grid-cols-2 gap-2 min-w-0\">\n              <NavButton icon={<BarChart3 className=\"w-4 h-4 flex-shrink-0\"/>} label=\"Dashboard\" active={view === \"dashboard\"} onClick={() => setView(\"dashboard\")} />\n              <NavButton icon={<Target className=\"w-4 h-4 flex-shrink-0\"/>} label=\"Campaigns\" active={view === \"campaigns\"} onClick={() => setView(\"campaigns\")} />\n              <NavButton icon={<MapPin className=\"w-4 h-4 flex-shrink-0\"/>} label=\"Streets\" active={view === \"streets\"} onClick={() => setView(\"streets\")} />\n              <NavButton icon={<FileText className=\"w-4 h-4 flex-shrink-0\"/>} label=\"Reports\" active={view === \"reports\"} onClick={() => setView(\"reports\")} />\n            </div>\n            <div className=\"mt-3 text-xs opacity-70\">\n              Active: <strong>{activeCampaign?.name}</strong>\n            </div>\n          </SectionCard>\n\n          <SectionCard title=\"Quick Drawers\" icon={Share2}>\n            <div className=\"grid grid-cols-2 gap-2 min-w-0\">\n              <NavButton icon={<MessageSquare className=\"w-4 h-4 flex-shrink-0\"/>} label=\"Scripts\" onClick={() => setShowScripts(true)} />\n              <NavButton icon={<Link2 className=\"w-4 h-4 flex-shrink-0\"/>} label=\"Links\" onClick={() => setShowLinks(true)} />\n            </div>\n            <div className=\"mt-3 text-xs opacity-70\">\n              Open while on a property to speed up calls and messages.\n            </div>\n          </SectionCard>\n\n          <SectionCard \n            title=\"Success Tips\" \n            icon={Target}\n            actions={\n              <button \n                onClick={() => setShowSuccessTips(true)}\n                className=\"px-3 py-1.5 rounded-xl bg-primary-600 text-white text-sm flex items-center gap-2 hover:bg-primary-700 transition-colors\"\n              >\n                <HelpCircle className=\"w-4 h-4\"/> View All\n              </button>\n            }\n          >\n            <div className=\"space-y-2\">\n              <div className=\"p-2 rounded-lg bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800\">\n                <div className=\"text-xs font-medium text-green-800 dark:text-green-200\">🎯 Best Time to Drop</div>\n                <div className=\"text-xs text-green-700 dark:text-green-300\">Evenings 6-8pm, weekends 10am-2pm</div>\n              </div>\n              <div className=\"p-2 rounded-lg bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800\">\n                <div className=\"text-xs font-medium text-blue-800 dark:text-blue-200\">📝 Follow Up Timing</div>\n                <div className=\"text-xs text-blue-700 dark:text-blue-300\">Return 2-3 days after dropping letters</div>\n              </div>\n              <div className=\"p-2 rounded-lg bg-purple-50 dark:bg-purple-900/20 border border-purple-200 dark:border-purple-800\">\n                <div className=\"text-xs font-medium text-purple-800 dark:text-purple-200\">💡 Conversation Starters</div>\n                <div className=\"text-xs text-purple-700 dark:text-purple-300\">\"Hi, I'm local and helping neighbours save money...\"</div>\n              </div>\n            </div>\n          </SectionCard>\n        </div>\n\n        {/* Main Panel */}\n        <div className=\"col-span-1 lg:col-span-3 space-y-3 lg:space-y-4\">\n          {view === \"dashboard\" && <Dashboard stats={stats} activeCampaign={activeCampaign} onGoStreets={() => setView(\"streets\")} />}\n          {view === \"campaigns\" && (\n            <Campaigns \n              campaigns={campaigns} \n              activeId={activeCampaignId} \n              onSelect={(id)=>{setActiveCampaignId(id); setView(\"streets\");}} \n              onCreateNew={() => setShowNewCampaignModal(true)}\n              onEdit={(campaign) => {\n                setEditingCampaign(campaign);\n                setShowEditCampaignModal(true);\n              }}\n              onDelete={deleteCampaign}\n              onToggleComplete={(campaignId) => {\n                setCampaigns(prev => prev.map(campaign => {\n                  if (campaign.id === campaignId) {\n                    const newStatus = campaign.status === 'completed' ? 'active' : 'completed';\n                    \n                    // If marking as completed, set all unhandled properties as unreachable\n                    if (newStatus === 'completed') {\n                      const updatedStreets = campaign.streets.map(street => ({\n                        ...street,\n                        properties: street.properties.map(property => {\n                          if (!property.spoke && property.result === 'none') {\n                            return { ...property, result: 'unreachable' };\n                          }\n                          return property;\n                        })\n                      }));\n                      return { ...campaign, streets: updatedStreets, status: newStatus };\n                    } else {\n                      // If unmarking as completed, just change the status back to active\n                      return { ...campaign, status: newStatus };\n                    }\n                  }\n                  return campaign;\n                }));\n              }}\n            />\n          )}\n          {view === \"streets\" && activeCampaign && (\n            <Streets\n              campaign={activeCampaign}\n              activeStreetId={activeStreetId}\n              onSelectStreet={(id)=>{setActiveStreetId(id); setView(\"streets\");}}\n              onOpenProperty={(streetId, propId)=>{setActiveStreetId(streetId); setActivePropertyId(propId); setView(\"property\");}}\n              onAddStreet={() => setShowNewStreetModal(true)}\n              onEditStreet={(street) => {\n                setEditingStreet(street);\n                setShowEditStreetModal(true);\n              }}\n              onDeleteStreet={deleteStreet}\n              onManageProperties={(street) => {\n                setActiveStreetId(street.id);\n                setShowPropertyManagerModal(true);\n              }}\n              onImportStreets={(campaignId) => {\n                setActiveCampaignId(campaignId);\n                setShowImportStreetsModal(true);\n              }}\n            />\n          )}\n          {view === \"property\" && activeStreet && activeProperty && (\n            <PropertyView\n              street={activeStreet}\n              property={activeProperty}\n              onBack={()=>setView(\"streets\")}\n              onUpdate={setProperty}\n              onShowScripts={()=>setShowScripts(true)}\n              onShowLinks={()=>setShowLinks(true)}\n              onToggleStatus={togglePropertyStatus}\n            />\n          )}\n          {view === \"reports\" && <Reports campaigns={campaigns} />}\n        </div>\n      </div>\n\n      {/* Drawers */}\n      <Drawer open={showScripts} onClose={()=>setShowScripts(false)} title=\"Scripts & Talking Points\">\n        <ScriptsPanel />\n      </Drawer>\n      <Drawer open={showLinks} onClose={()=>setShowLinks(false)} title=\"Quick Links\">\n        <LinksPanel links={activeCampaign?.links} />\n      </Drawer>\n      <Drawer open={showSettings} onClose={()=>setShowSettings(false)} title=\"Settings\" size=\"small\">\n        <SettingsPanel \n          dark={dark} \n          onToggleDark={toggleDark} \n          onExport={exportData}\n          onImport={importData}\n          onReset={resetData}\n        />\n      </Drawer>\n\n      {/* Help Modal */}\n      <Drawer open={showHelp} onClose={()=>setShowHelp(false)} title=\"Help & FAQ\" size=\"large\">\n        <HelpPanel />\n      </Drawer>\n\n      {/* About Modal */}\n      <Drawer open={showAbout} onClose={()=>setShowAbout(false)} title=\"About\" size=\"small\">\n        <AboutPanel />\n      </Drawer>\n\n      {/* Success Tips Modal */}\n      <Drawer open={showSuccessTips} onClose={()=>setShowSuccessTips(false)} title=\"Success Tips for NLs\" size=\"large\">\n        <SuccessTipsPanel />\n      </Drawer>\n\n      {/* Reset Confirmation Modal */}\n      <Drawer open={showResetModal} onClose={()=>setShowResetModal(false)} title=\"Reset Data\" size=\"small\">\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center gap-3 p-3 bg-red-50 dark:bg-red-900/20 rounded-xl border border-red-200 dark:border-red-800\">\n            <AlertTriangle className=\"w-5 h-5 text-red-600 dark:text-red-400\" />\n            <div className=\"text-sm\">\n              <div className=\"font-medium text-red-800 dark:text-red-200\">Warning</div>\n              <div className=\"text-red-600 dark:text-red-400\">This action cannot be undone.</div>\n            </div>\n          </div>\n          \n          <div className=\"text-sm\">\n            <p className=\"mb-3\">Are you sure you want to reset all data? This will:</p>\n            <ul className=\"space-y-1 text-gray-600 dark:text-gray-400\">\n              <li>• Remove all campaigns and activity data</li>\n              <li>• Reset to empty state with one new campaign</li>\n              <li>• Clear all progress and follow-ups</li>\n            </ul>\n          </div>\n\n          <div className=\"flex gap-3\">\n            <button \n              onClick={confirmReset}\n              className=\"flex-1 px-4 py-2 rounded-xl bg-red-600 text-white text-sm hover:bg-red-700 transition-colors\"\n            >\n              Yes, Reset All Data\n            </button>\n            <button \n              onClick={() => setShowResetModal(false)}\n              className=\"flex-1 px-4 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </Drawer>\n\n      {/* New Campaign Modal */}\n      <Drawer open={showNewCampaignModal} onClose={()=>setShowNewCampaignModal(false)} title=\"Create New Campaign\" size=\"small\">\n        <NewCampaignForm \n          onSubmit={createNewCampaign} \n          onCancel={() => setShowNewCampaignModal(false)}\n          addressSearchTerm={addressSearchTerm}\n          setAddressSearchTerm={setAddressSearchTerm}\n          addressSuggestions={addressSuggestions}\n          selectedPostcode={selectedPostcode}\n          selectedTown={selectedTown}\n          availableStreets={availableStreets}\n          selectedStreets={selectedStreets}\n          isLoadingAddresses={isLoadingAddresses}\n          addressLookupStep={addressLookupStep}\n          searchAddresses={searchAddresses}\n          selectAddress={selectAddress}\n          toggleStreetSelection={toggleStreetSelection}\n          importSelectedStreets={importSelectedStreets}\n          resetAddressLookup={resetAddressLookup}\n        />\n      </Drawer>\n\n      {/* New Street Modal */}\n      <Drawer open={showNewStreetModal} onClose={()=>setShowNewStreetModal(false)} title=\"Add New Street\" size=\"small\">\n        <NewStreetForm onSubmit={createNewStreet} onCancel={() => setShowNewStreetModal(false)} />\n      </Drawer>\n\n      {/* Import Streets Modal */}\n      <Drawer open={showImportStreetsModal} onClose={()=>setShowImportStreetsModal(false)} title=\"Import Streets\" size=\"small\">\n        <ImportStreetsForm \n          onSubmit={importSelectedStreets} \n          onCancel={() => setShowImportStreetsModal(false)}\n          addressSearchTerm={addressSearchTerm}\n          setAddressSearchTerm={setAddressSearchTerm}\n          addressSuggestions={addressSuggestions}\n          selectedPostcode={selectedPostcode}\n          selectedTown={selectedTown}\n          availableStreets={availableStreets}\n          selectedStreets={selectedStreets}\n          isLoadingAddresses={isLoadingAddresses}\n          addressLookupStep={addressLookupStep}\n          searchAddresses={searchAddresses}\n          selectAddress={selectAddress}\n          toggleStreetSelection={toggleStreetSelection}\n          importSelectedStreets={importSelectedStreets}\n          resetAddressLookup={resetAddressLookup}\n        />\n      </Drawer>\n\n      {/* Edit Campaign Modal */}\n      <Drawer open={showEditCampaignModal} onClose={()=>setShowEditCampaignModal(false)} title=\"Edit Campaign\" size=\"small\">\n        <EditCampaignForm campaign={editingCampaign} onSubmit={editCampaign} onCancel={() => setShowEditCampaignModal(false)} />\n      </Drawer>\n\n      {/* Edit Street Modal */}\n      <Drawer open={showEditStreetModal} onClose={()=>setShowEditStreetModal(false)} title=\"Edit Street\" size=\"small\">\n        <EditStreetForm street={editingStreet} onSubmit={editStreet} onCancel={() => setShowEditStreetModal(false)} />\n      </Drawer>\n\n      {/* Property Manager Modal */}\n      <Drawer open={showPropertyManagerModal} onClose={()=>setShowPropertyManagerModal(false)} title=\"Manage Properties\" size=\"large\">\n        <PropertyManager street={activeStreet} onAddProperty={addProperty} onRemoveProperty={removeProperty} onEditProperty={editPropertyLabel} onClose={() => setShowPropertyManagerModal(false)} />\n      </Drawer>\n\n      {/* Mobile Floating Action Buttons */}\n      <div className=\"lg:hidden fixed bottom-6 right-6 z-50\">\n        <div className=\"flex flex-col gap-2\">\n          <button \n            onClick={() => setShowScripts(true)}\n            className=\"w-12 h-12 rounded-full bg-primary-600 text-white shadow-lg hover:bg-primary-700 transition-colors flex items-center justify-center\"\n            title=\"Scripts\"\n          >\n            <MessageSquare className=\"w-5 h-5\" />\n          </button>\n          <button \n            onClick={() => setShowLinks(true)}\n            className=\"w-12 h-12 rounded-full bg-gray-600 text-white shadow-lg hover:bg-gray-700 transition-colors flex items-center justify-center\"\n            title=\"Quick Links\"\n          >\n            <Link2 className=\"w-5 h-5\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Footer Hint */}\n      <div className=\"max-w-6xl mx-auto px-4 pb-8 text-xs opacity-70\">\n        UW Street Smart - NL Activity Tracker v1.0.0 | Built for UW partners making a difference in their communities.\n      </div>\n    </div>\n  );\n}\n\n// --- Subcomponents ---\nfunction NavButton({ icon, label, active, onClick }) {\n  return (\n    <button\n      onClick={onClick}\n      className={`flex items-center justify-center gap-2 px-3 py-2 rounded-xl text-sm border transition-all min-w-0 ${\n        active \n          ? \"bg-primary-600 text-white border-primary-600 shadow-md\" \n          : \"bg-white/70 dark:bg-gray-900/70 border-gray-200 dark:border-gray-800 hover:border-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800\"\n      }`}\n    >\n      <span className=\"flex-shrink-0\">{icon}</span>\n      <span className=\"truncate\">{label}</span>\n    </button>\n  );\n}\n\nfunction Stat({ icon: Icon, label, value, sub }) {\n  return (\n    <div className=\"rounded-2xl p-4 bg-white/70 dark:bg-gray-900/70 border border-gray-200 dark:border-gray-800 shadow-soft flex items-center gap-3\">\n      <div className=\"p-2 rounded-xl bg-gray-100 dark:bg-gray-800\">\n        <Icon className=\"w-5 h-5 text-primary-600\" />\n      </div>\n      <div>\n        <div className=\"text-2xl font-semibold leading-none\">{value}</div>\n        <div className=\"text-sm opacity-70\">{label}</div>\n        {sub && <div className=\"text-xs opacity-60 mt-1\">{sub}</div>}\n      </div>\n    </div>\n  );\n}\n\nfunction Dashboard({ stats, activeCampaign, onGoStreets }) {\n  const hasData = activeCampaign && activeCampaign.streets.length > 0;\n  \n  return (\n    <div className=\"space-y-4\">\n      <SectionCard \n        title=\"Today's Activity\" \n        icon={Home} \n        actions={\n          hasData ? (\n            <button \n              onClick={onGoStreets} \n              className=\"px-3 py-1.5 rounded-xl bg-primary-600 text-white text-sm flex items-center gap-2 hover:bg-primary-700 transition-colors\"\n            >\n              Go to Streets <ChevronRight className=\"w-4 h-4\"/>\n            </button>\n          ) : (\n            <button \n              onClick={onGoStreets} \n              className=\"px-3 py-1.5 rounded-xl bg-primary-600 text-white text-sm flex items-center gap-2 hover:bg-primary-700 transition-colors\"\n            >\n              Create Campaign <ChevronRight className=\"w-4 h-4\"/>\n            </button>\n          )\n        }\n      >\n        {hasData ? (\n          <div className=\"grid md:grid-cols-4 gap-3\">\n            <Stat icon={UploadCloud} label=\"Letters dropped today\" value={stats.letters} />\n            <Stat icon={MessageSquare} label=\"Conversations today\" value={stats.convos} />\n            <Stat icon={CheckCircle} label=\"Interested today\" value={stats.interested} />\n            <Stat icon={CalendarClock} label=\"Follow‑ups scheduled today\" value={stats.followups} />\n          </div>\n        ) : (\n          <div className=\"text-center py-8\">\n            <div className=\"w-16 h-16 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center mx-auto mb-4\">\n              <Target className=\"w-8 h-8 text-gray-400\" />\n            </div>\n            <h3 className=\"text-lg font-medium mb-2\">No campaigns yet</h3>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">Get started by creating your first neighbourhood campaign</p>\n            <button \n              onClick={() => setShowNewCampaignModal(true)} \n              className=\"px-4 py-2 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n            >\n              Create First Campaign\n            </button>\n          </div>\n        )}\n      </SectionCard>\n\n      {hasData && stats.outcomes && (\n        <SectionCard title=\"Conversation Outcomes\" icon={MessageSquare}>\n          <div className=\"grid md:grid-cols-2 gap-3\">\n            <div className=\"p-3 rounded-xl bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800\">\n              <div className=\"text-lg font-semibold text-green-700 dark:text-green-300\">{stats.outcomes.interested}</div>\n              <div className=\"text-sm text-green-600 dark:text-green-400\">Interested</div>\n            </div>\n            <div className=\"p-3 rounded-xl bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800\">\n              <div className=\"text-lg font-semibold text-green-700 dark:text-green-300\">{stats.outcomes.customer_signed}</div>\n              <div className=\"text-sm text-green-600 dark:text-green-400\">Customer Signed</div>\n            </div>\n            <div className=\"p-3 rounded-xl bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800\">\n              <div className=\"text-lg font-semibold text-green-700 dark:text-green-300\">{stats.outcomes.appointment_booked}</div>\n              <div className=\"text-sm text-green-600 dark:text-green-400\">Appointment Booked</div>\n            </div>\n            <div className=\"p-3 rounded-xl bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800\">\n              <div className=\"text-lg font-semibold text-yellow-700 dark:text-yellow-300\">{stats.outcomes.no_for_now}</div>\n              <div className=\"text-sm text-yellow-600 dark:text-yellow-400\">No for Now</div>\n            </div>\n            <div className=\"p-3 rounded-xl bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800\">\n              <div className=\"text-lg font-semibold text-blue-700 dark:text-blue-300\">{stats.outcomes.already_uw}</div>\n              <div className=\"text-sm text-blue-600 dark:text-blue-400\">Already with UW</div>\n            </div>\n            <div className=\"p-3 rounded-xl bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800\">\n              <div className=\"text-lg font-semibold text-red-700 dark:text-red-300\">{stats.outcomes.not_interested}</div>\n              <div className=\"text-sm text-red-600 dark:text-red-400\">Not Interested</div>\n            </div>\n            <div className=\"p-3 rounded-xl bg-gray-50 dark:bg-gray-900/20 border border-gray-200 dark:border-gray-800\">\n              <div className=\"text-lg font-semibold text-gray-700 dark:text-gray-300\">{stats.outcomes.unreachable || 0}</div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Unreachable</div>\n            </div>\n\n          </div>\n        </SectionCard>\n      )}\n\n      <SectionCard title=\"Active campaign\" icon={MapPin}>\n        {activeCampaign ? (\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <div className=\"font-medium\">{activeCampaign.name}</div>\n              <div className=\"text-xs opacity-70\">\n                Area: {activeCampaign.area || 'Not set'} • Streets: {activeCampaign.streets.length}\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Chip variant={activeCampaign.status === 'active' ? 'success' : 'default'}>\n                {activeCampaign.status}\n              </Chip>\n              <button className=\"px-3 py-1.5 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm flex items-center gap-2 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\">\n                <Plus className=\"w-4 h-4\"/> New street\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center py-4\">\n            <p className=\"text-gray-600 dark:text-gray-400\">No active campaign</p>\n          </div>\n        )}\n      </SectionCard>\n    </div>\n  );\n}\n\nfunction Campaigns({ campaigns, activeId, onSelect, onCreateNew, onEdit, onDelete, onToggleComplete }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n  const [sortBy, setSortBy] = useState(\"name\");\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Filter and sort campaigns\n  const filteredCampaigns = useMemo(() => {\n    let filtered = campaigns.filter(c => {\n      const matchesSearch = c.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           c.area.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesStatus = statusFilter === \"all\" || c.status === statusFilter;\n      return matchesSearch && matchesStatus;\n    });\n\n    // Sort campaigns\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case \"name\":\n          return a.name.localeCompare(b.name);\n        case \"date\":\n          return new Date(b.created_at) - new Date(a.created_at);\n        case \"streets\":\n          return b.streets.length - a.streets.length;\n        case \"status\":\n          return a.status.localeCompare(b.status);\n        default:\n          return 0;\n      }\n    });\n\n    return filtered;\n  }, [campaigns, searchTerm, statusFilter, sortBy]);\n\n  return (\n    <div className=\"space-y-3\">\n      <SectionCard \n        title=\"Create New Campaign\" \n        icon={Plus}\n        actions={\n          <button \n            onClick={onCreateNew}\n            className=\"px-3 py-1.5 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n          >\n            <Plus className=\"w-4 h-4\"/> New Campaign\n          </button>\n        }\n      >\n        <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n          Create a new neighbourhood letters campaign to start tracking activity.\n        </div>\n      </SectionCard>\n\n      <SectionCard \n        title=\"Search & Filter\" \n        icon={Search}\n        actions={\n          <button \n            onClick={() => setShowFilters(!showFilters)}\n            className=\"px-3 py-1.5 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors flex items-center gap-2\"\n          >\n            {showFilters ? <ChevronRight className=\"w-4 h-4\" /> : <Search className=\"w-4 h-4\" />}\n            {showFilters ? 'Hide' : 'Show'} Filters\n          </button>\n        }\n      >\n        {showFilters && (\n          <div className=\"space-y-3\">\n            {/* Search */}\n            <div>\n              <label className=\"text-xs opacity-70\">Search campaigns</label>\n              <input \n                type=\"text\" \n                value={searchTerm} \n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder=\"Search by name or area...\"\n                className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-3\">\n              {/* Status Filter */}\n              <div>\n                <label className=\"text-xs opacity-70\">Status</label>\n                <select \n                  value={statusFilter} \n                  onChange={(e) => setStatusFilter(e.target.value)}\n                  className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n                >\n                  <option value=\"all\">All Status</option>\n                  <option value=\"draft\">Draft</option>\n                  <option value=\"active\">Active</option>\n                  <option value=\"archived\">Archived</option>\n                </select>\n              </div>\n              \n              {/* Sort By */}\n              <div>\n                <label className=\"text-xs opacity-70\">Sort by</label>\n                <select \n                  value={sortBy} \n                  onChange={(e) => setSortBy(e.target.value)}\n                  className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n                >\n                  <option value=\"name\">Name</option>\n                  <option value=\"date\">Date Created</option>\n                  <option value=\"streets\">Number of Streets</option>\n                  <option value=\"status\">Status</option>\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"text-xs opacity-70\">\n              Showing {filteredCampaigns.length} of {campaigns.length} campaigns\n            </div>\n          </div>\n        )}\n      </SectionCard>\n      \n      {filteredCampaigns.map(c => (\n        <SectionCard key={c.id} title={c.name} icon={MapPin} actions={\n          <div className=\"flex gap-2\">\n            <button \n              className=\"px-3 py-1.5 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\" \n              onClick={()=>onSelect(c.id)}\n            >\n              Open\n            </button>\n            <button \n              className=\"px-3 py-1.5 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n              onClick={() => onEdit(c)}\n            >\n              Edit\n            </button>\n            <button \n              className={`px-3 py-1.5 rounded-xl text-sm transition-colors border ${\n                c.status === 'completed' \n                  ? 'bg-orange-100 dark:bg-orange-900/20 text-orange-600 dark:text-orange-400 hover:bg-orange-200 dark:hover:bg-orange-900/30 border-orange-200 dark:border-orange-800'\n                  : 'bg-green-100 dark:bg-green-900/20 text-green-600 dark:text-green-400 hover:bg-green-200 dark:hover:bg-green-900/30 border-green-200 dark:border-green-800'\n              }`}\n              onClick={() => {\n                if (c.status === 'completed') {\n                  if (confirm('Unmark this campaign as completed? This will set the status back to active.')) {\n                    onToggleComplete(c.id);\n                  }\n                } else {\n                  if (confirm('Mark this campaign as completed? This will set all remaining properties as \"Unreachable\".')) {\n                    onToggleComplete(c.id);\n                  }\n                }\n              }}\n            >\n              {c.status === 'completed' ? 'Mark Incomplete' : 'Mark Complete'}\n            </button>\n            <button \n              className=\"px-3 py-1.5 rounded-xl bg-red-100 dark:bg-red-900/20 text-red-600 dark:text-red-400 text-sm hover:bg-red-200 dark:hover:bg-red-900/30 transition-colors border border-red-200 dark:border-red-800\"\n              onClick={() => onDelete(c.id)}\n            >\n              Delete\n            </button>\n          </div>\n        }>\n          <div className=\"flex items-center justify-between text-sm\">\n            <div>Area: <strong>{c.area || 'Not set'}</strong></div>\n            <div className=\"flex items-center gap-2\">\n              <Chip variant={c.status === 'active' ? 'success' : 'default'}>\n                {c.status}\n              </Chip>\n              <div className=\"text-xs opacity-70\">\n                {c.streets.length} streets • Created {c.created_at}\n              </div>\n            </div>\n          </div>\n        </SectionCard>\n      ))}\n    </div>\n  );\n}\n\nfunction Streets({ campaign, activeStreetId, onSelectStreet, onOpenProperty, onAddStreet, onEditStreet, onDeleteStreet, onManageProperties, onImportStreets }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n  const [sortBy, setSortBy] = useState(\"name\");\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Filter and sort streets\n  const filteredStreets = useMemo(() => {\n    let filtered = campaign.streets.filter(s => {\n      const matchesSearch = s.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           s.postcode.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesStatus = statusFilter === \"all\" || s.status === statusFilter;\n      return matchesSearch && matchesStatus;\n    });\n\n    // Sort streets\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case \"name\":\n          return a.name.localeCompare(b.name);\n        case \"properties\":\n          return b.properties.length - a.properties.length;\n        case \"status\":\n          return a.status.localeCompare(b.status);\n        case \"postcode\":\n          return a.postcode.localeCompare(b.postcode);\n        default:\n          return 0;\n      }\n    });\n\n    return filtered;\n  }, [campaign.streets, searchTerm, statusFilter, sortBy]);\n\n  return (\n    <div className=\"space-y-4\">\n      <SectionCard \n        title={`Streets in ${campaign.name}`} \n        icon={MapPin} \n        actions={\n          <div className=\"flex gap-2\">\n            <button \n              onClick={onAddStreet}\n              className=\"px-3 py-1.5 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n            >\n              <Plus className=\"w-4 h-4\"/> Add street\n            </button>\n            <button \n              onClick={() => onImportStreets(campaign.id)}\n              className=\"px-3 py-1.5 rounded-xl bg-green-600 text-white text-sm hover:bg-green-700 transition-colors\"\n            >\n              <MapPin className=\"w-4 h-4\"/> Import Streets\n            </button>\n          </div>\n        }\n      >\n        <SectionCard \n          title=\"Search & Filter\" \n          icon={Search}\n          actions={\n            <button \n              onClick={() => setShowFilters(!showFilters)}\n              className=\"px-3 py-1.5 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors flex items-center gap-2\"\n            >\n              {showFilters ? <ChevronRight className=\"w-4 h-4\" /> : <Search className=\"w-4 h-4\" />}\n              {showFilters ? 'Hide' : 'Show'} Filters\n            </button>\n          }\n        >\n          {showFilters && (\n            <div className=\"space-y-3\">\n              {/* Search */}\n              <div>\n                <label className=\"text-xs opacity-70\">Search streets</label>\n                <input \n                  type=\"text\" \n                  value={searchTerm} \n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  placeholder=\"Search by street name or postcode...\"\n                  className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n                />\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-3\">\n                {/* Status Filter */}\n                <div>\n                  <label className=\"text-xs opacity-70\">Status</label>\n                  <select \n                    value={statusFilter} \n                    onChange={(e) => setStatusFilter(e.target.value)}\n                    className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n                  >\n                    <option value=\"all\">All Status</option>\n                    <option value=\"not_started\">Not Started</option>\n                    <option value=\"in_progress\">In Progress</option>\n                    <option value=\"completed\">Completed</option>\n                  </select>\n                </div>\n                \n                {/* Sort By */}\n                <div>\n                  <label className=\"text-xs opacity-70\">Sort by</label>\n                  <select \n                    value={sortBy} \n                    onChange={(e) => setSortBy(e.target.value)}\n                    className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n                  >\n                    <option value=\"name\">Street Name</option>\n                    <option value=\"properties\">Number of Properties</option>\n                    <option value=\"status\">Status</option>\n                    <option value=\"postcode\">Postcode</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"text-xs opacity-70\">\n                Showing {filteredStreets.length} of {campaign.streets.length} streets\n              </div>\n            </div>\n          )}\n        </SectionCard>\n        {filteredStreets.length > 0 ? (\n          <div className=\"grid md:grid-cols-2 gap-3\">\n            {filteredStreets.map(s => (\n            <div \n              key={s.id} \n              className={`rounded-2xl border p-4 bg-white/70 dark:bg-gray-900/70 transition-all ${\n                s.id===activeStreetId \n                  ? 'border-primary-400 shadow-md' \n                  : 'border-gray-200 dark:border-gray-800 hover:border-gray-300 dark:hover:border-gray-700'\n              }`}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <div className=\"font-medium\">\n                  {s.name} <span className=\"opacity-60 text-sm\">• {s.postcode}</span>\n                </div>\n                <Chip variant={\n                  s.status === 'completed' ? 'success' : \n                  s.status === 'in_progress' ? 'warning' : 'default'\n                }>\n                  {s.status.replace('_',' ')}\n                </Chip>\n              </div>\n              <div className=\"text-xs opacity-70 mb-3\">{s.properties.length} properties</div>\n              \n              {/* Property buttons with better layout */}\n              <div className=\"mb-3\">\n                <div className=\"flex flex-wrap gap-1 max-h-20 overflow-y-auto\">\n                  {s.properties.map(p => {\n                    // Determine button styling based on progression and outcome\n                    let buttonStyle = 'border-gray-300 dark:border-gray-700 hover:border-gray-400 dark:hover:border-gray-600';\n                    \n                    // Priority: Outcomes > Spoke > Knocked > Dropped\n                    if (p.result === 'interested' || p.result === 'customer_signed' || p.result === 'appointment_booked') {\n                      buttonStyle = 'border-green-400 bg-green-50 dark:bg-green-900/20 text-green-700 dark:text-green-300';\n                    } else if (p.result === 'no_for_now') {\n                      buttonStyle = 'border-yellow-400 bg-yellow-50 dark:bg-yellow-900/20 text-yellow-700 dark:text-yellow-300';\n                    } else if (p.result === 'already_uw') {\n                      buttonStyle = 'border-blue-400 bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300';\n                    } else if (p.result === 'not_interested') {\n                      buttonStyle = 'border-red-400 bg-red-50 dark:bg-red-900/20 text-red-700 dark:text-red-300';\n                    } else if (p.result === 'unreachable') {\n                      buttonStyle = 'border-gray-400 bg-gray-50 dark:bg-gray-900/20 text-gray-700 dark:text-gray-300';\n                    } else if (p.spoke) {\n                      buttonStyle = 'border-green-400 bg-green-50 dark:bg-green-900/20 text-green-700 dark:text-green-300';\n                    } else if (p.knocked) {\n                      buttonStyle = 'border-blue-400 bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300';\n                    } else if (p.dropped) {\n                      buttonStyle = 'border-orange-400 bg-orange-50 dark:bg-orange-900/20 text-orange-700 dark:text-orange-300';\n                    }\n                    \n                    return (\n                      <button \n                        key={p.id} \n                        onClick={()=>onOpenProperty(s.id, p.id)} \n                        className={`px-2 py-1 rounded-lg text-xs border transition-colors flex-shrink-0 ${buttonStyle}`}\n                        title={p.result ? `Outcome: ${p.result.replace('_', ' ')}` : ''}\n                      >\n                        {p.label}\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n              \n              <div className=\"flex items-center gap-2\">\n                <button \n                  onClick={() => onManageProperties(s)}\n                  className=\"px-3 py-1.5 rounded-xl bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 text-sm hover:bg-blue-200 dark:hover:bg-blue-900/30 transition-colors border border-blue-200 dark:border-blue-800\"\n                >\n                  Properties\n                </button>\n                <button \n                  onClick={() => onEditStreet(s)}\n                  className=\"px-3 py-1.5 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n                >\n                  Edit\n                </button>\n                <button \n                  onClick={() => onDeleteStreet(s.id)}\n                  className=\"px-3 py-1.5 rounded-xl bg-red-100 dark:bg-red-900/20 text-red-600 dark:text-red-400 text-sm hover:bg-red-200 dark:hover:bg-red-900/30 transition-colors border border-red-200 dark:border-red-800\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n        ) : searchTerm || statusFilter !== \"all\" ? (\n          <div className=\"text-center py-8\">\n            <div className=\"w-16 h-16 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center mx-auto mb-4\">\n              <Search className=\"w-8 h-8 text-gray-400\" />\n            </div>\n            <h3 className=\"text-lg font-medium mb-2\">No streets found</h3>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">Try adjusting your search or filter criteria</p>\n            <button \n              onClick={() => { setSearchTerm(\"\"); setStatusFilter(\"all\"); }}\n              className=\"px-4 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n            >\n              Clear Filters\n            </button>\n          </div>\n        ) : (\n          <div className=\"text-center py-8\">\n            <div className=\"w-16 h-16 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center mx-auto mb-4\">\n              <MapPin className=\"w-8 h-8 text-gray-400\" />\n            </div>\n            <h3 className=\"text-lg font-medium mb-2\">No streets yet</h3>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">Add your first street to start tracking neighbourhood letters</p>\n            <button \n              onClick={onAddStreet}\n              className=\"px-4 py-2 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n            >\n              Add First Street\n            </button>\n          </div>\n        )}\n      </SectionCard>\n    </div>\n  );\n}\n\nfunction ToggleRow({ label, value, onChange }) {\n  return (\n    <div className=\"flex items-center justify-between py-2\">\n      <div className=\"text-sm\">{label}</div>\n      <button \n        onClick={()=>onChange(!value)} \n        className={`w-11 h-6 rounded-full p-1 transition-colors ${\n          value ? 'bg-primary-600' : 'bg-gray-300 dark:bg-gray-700'\n        }`}\n      >\n        <div className={`w-4 h-4 rounded-full bg-white transition-transform ${value ? 'translate-x-5' : ''}`}></div>\n      </button>\n    </div>\n  );\n}\n\nfunction PropertyView({ street, property, onBack, onUpdate, onShowScripts, onShowLinks, onToggleStatus }) {\n  const [showFollowUp, setShowFollowUp] = useState(false);\n  const [notes, setNotes] = useState(\"\");\n\n  return (\n    <div className=\"space-y-4\">\n      <button \n        onClick={onBack} \n        className=\"text-sm opacity-70 hover:opacity-100 transition-opacity flex items-center gap-1\"\n      >\n        <ChevronRight className=\"w-4 h-4 rotate-180\" /> Back to streets\n      </button>\n\n      <SectionCard \n        title={`${property.label} · ${street.name}`} \n        icon={Home} \n        actions={\n          <Chip variant=\"default\" className=\"text-xs\">\n            {street.postcode}\n          </Chip>\n        }\n      >\n        <div className=\"grid md:grid-cols-3 gap-3\">\n          <ActionButton \n            active={property.dropped} \n            icon={UploadCloud} \n            label=\"Dropped\" \n            onClick={() => onToggleStatus(property.id, 'dropped')} \n          />\n          <ActionButton \n            active={property.knocked} \n            icon={Check} \n            label=\"Knocked\" \n            onClick={() => onToggleStatus(property.id, 'knocked')} \n          />\n          <ActionButton \n            active={property.spoke} \n            icon={MessageSquare} \n            label=\"Spoke\" \n            onClick={() => onToggleStatus(property.id, 'spoke')} \n          />\n        </div>\n\n        <div className=\"mt-3 grid md:grid-cols-2 gap-3\">\n          <button \n            onClick={()=>setShowFollowUp(true)} \n            className=\"w-full px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 flex items-center justify-center gap-2 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n          >\n            <CalendarClock className=\"w-4 h-4\"/> Schedule follow‑up\n          </button>\n          <div className=\"flex gap-2\">\n            <button \n              onClick={onShowScripts} \n              className=\"flex-1 px-3 py-2 rounded-xl bg-primary-600 text-white text-sm flex items-center justify-center gap-2 hover:bg-primary-700 transition-colors\"\n            >\n              <MessageSquare className=\"w-4 h-4\"/> Scripts\n            </button>\n            <button \n              onClick={onShowLinks} \n              className=\"flex-1 px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm flex items-center justify-center gap-2 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n            >\n              <Link2 className=\"w-4 h-4\"/> Links\n            </button>\n          </div>\n        </div>\n\n        <div className=\"mt-4\">\n          <label className=\"text-xs opacity-70\">Notes (avoid personal data)</label>\n          <textarea \n            value={notes} \n            onChange={e=>setNotes(e.target.value)} \n            className=\"w-full mt-1 p-3 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\" \n            rows={3} \n            placeholder=\"e.g., 'best after 6pm', 'steep steps'\"\n          />\n          <div className=\"mt-4\">\n            <label className=\"text-xs opacity-70 mb-2 block\">Conversation Outcome</label>\n            <div className=\"grid grid-cols-2 gap-2\">\n                             <OutcomeButton \n                 label=\"Interested\" \n                 value=\"interested\" \n                 current={property.result} \n                 onClick={() => onUpdate({ result: 'interested' })}\n                 variant=\"success\"\n               />\n               <OutcomeButton \n                 label=\"Customer Signed\" \n                 value=\"customer_signed\" \n                 current={property.result} \n                 onClick={() => onUpdate({ result: 'customer_signed' })}\n                 variant=\"success\"\n               />\n               <OutcomeButton \n                 label=\"Appointment Booked\" \n                 value=\"appointment_booked\" \n                 current={property.result} \n                 onClick={() => onUpdate({ result: 'appointment_booked' })}\n                 variant=\"success\"\n               />\n               <OutcomeButton \n                 label=\"No for Now\" \n                 value=\"no_for_now\" \n                 current={property.result} \n                 onClick={() => onUpdate({ result: 'no_for_now' })}\n                 variant=\"warning\"\n               />\n              <OutcomeButton \n                label=\"Already with UW\" \n                value=\"already_uw\" \n                current={property.result} \n                onClick={() => onUpdate({ result: 'already_uw' })}\n                variant=\"info\"\n              />\n              <OutcomeButton \n                label=\"Not Interested\" \n                value=\"not_interested\" \n                current={property.result} \n                onClick={() => onUpdate({ result: 'not_interested' })}\n                variant=\"error\"\n              />\n              <OutcomeButton \n                label=\"Unreachable\" \n                value=\"unreachable\" \n                current={property.result} \n                onClick={() => onUpdate({ result: 'unreachable' })}\n                variant=\"default\"\n              />\n              \n            </div>\n          </div>\n          \n          <div className=\"flex items-center justify-between mt-4\">\n            <button className=\"px-3 py-1.5 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\">\n              Attach photo\n            </button>\n            <button \n              onClick={() => onUpdate({ result: 'none' })}\n              className=\"px-3 py-1.5 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n            >\n              Clear outcome\n            </button>\n          </div>\n        </div>\n      </SectionCard>\n\n      <FollowUpModal \n        open={showFollowUp} \n        onClose={()=>setShowFollowUp(false)} \n        onSave={(dt)=>{ onUpdate({ followUpAt: dt }); setShowFollowUp(false); }} \n      />\n    </div>\n  );\n}\n\nfunction ActionButton({ icon: Icon, label, active, onClick }) {\n  return (\n    <button \n      onClick={onClick} \n      className={`px-3 py-3 rounded-2xl border shadow-sm flex items-center justify-center gap-2 text-sm transition-all ${\n        active \n          ? 'bg-secondary-50 dark:bg-secondary-900/20 border-secondary-400 text-secondary-700 dark:text-secondary-300' \n          : 'bg-white/70 dark:bg-gray-900/70 border-gray-200 dark:border-gray-800 hover:border-gray-300 dark:hover:border-gray-700'\n      }`}\n    >\n      <Icon className=\"w-4 h-4\" /> {label}\n    </button>\n  );\n}\n\nfunction OutcomeButton({ label, value, current, onClick, variant = \"default\" }) {\n  const isActive = current === value;\n  \n  const variantStyles = {\n    success: isActive \n      ? 'bg-green-50 dark:bg-green-900/20 border-green-400 text-green-700 dark:text-green-300' \n      : 'bg-white/70 dark:bg-gray-900/70 border-gray-200 dark:border-gray-800 hover:border-green-300 dark:hover:border-green-700',\n    warning: isActive \n      ? 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-400 text-yellow-700 dark:text-yellow-300' \n      : 'bg-white/70 dark:bg-gray-900/70 border-gray-200 dark:border-gray-800 hover:border-yellow-300 dark:hover:border-yellow-700',\n    error: isActive \n      ? 'bg-red-50 dark:bg-red-900/20 border-red-400 text-red-700 dark:text-red-300' \n      : 'bg-white/70 dark:bg-gray-900/70 border-gray-200 dark:border-gray-800 hover:border-red-300 dark:hover:border-red-700',\n    info: isActive \n      ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-400 text-blue-700 dark:text-blue-300' \n      : 'bg-white/70 dark:bg-gray-900/70 border-gray-200 dark:border-gray-800 hover:border-blue-300 dark:hover:border-blue-700',\n    default: isActive \n      ? 'bg-gray-50 dark:bg-gray-800/60 border-gray-400 text-gray-700 dark:text-gray-300' \n      : 'bg-white/70 dark:bg-gray-900/70 border-gray-200 dark:border-gray-800 hover:border-gray-300 dark:hover:border-gray-700'\n  };\n\n  return (\n    <button \n      onClick={onClick} \n      className={`px-3 py-2 rounded-xl border text-sm transition-all ${variantStyles[variant]}`}\n    >\n      {label}\n    </button>\n  );\n}\n\nfunction FollowUpModal({ open, onClose, onSave }) {\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n\n  return (\n    <Drawer open={open} onClose={onClose} title=\"Schedule follow‑up\">\n      <div className=\"space-y-3\">\n        <div className=\"grid grid-cols-2 gap-3\">\n          <div>\n            <label className=\"text-xs opacity-70\">Date</label>\n            <input \n              type=\"date\" \n              value={date} \n              onChange={e=>setDate(e.target.value)} \n              className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n            />\n          </div>\n          <div>\n            <label className=\"text-xs opacity-70\">Time</label>\n            <input \n              type=\"time\" \n              value={time} \n              onChange={e=>setTime(e.target.value)} \n              className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n            />\n          </div>\n        </div>\n        <button \n          onClick={()=>onSave(`${date}T${time}:00`)} \n          className=\"w-full px-3 py-2 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n        >\n          Save reminder\n        </button>\n      </div>\n    </Drawer>\n  );\n}\n\nfunction ScriptsPanel() {\n  const [tab, setTab] = useState(\"opener\");\n  const tabs = [\n    { key: \"opener\", label: \"Openers\" },\n    { key: \"objection\", label: \"Objections\" },\n    { key: \"closer\", label: \"Closers\" },\n    { key: \"sms\", label: \"SMS/WhatsApp\" },\n  ];\n  const items = seedScripts[tab];\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-4 gap-2 mb-3\">\n        {tabs.map(t => (\n          <button \n            key={t.key} \n            onClick={()=>setTab(t.key)} \n            className={`px-3 py-2 rounded-xl text-sm transition-colors ${\n              tab===t.key \n                ? 'bg-primary-600 text-white' \n                : 'bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700'\n            }`}\n          >\n            {t.label}\n          </button>\n        ))}\n      </div>\n      <div className=\"space-y-3\">\n        {items.map(s => (\n          <div key={s.id} className=\"p-3 rounded-2xl border bg-white/70 dark:bg-gray-900/70 border-gray-200 dark:border-gray-800\">\n            <div className=\"text-sm font-medium mb-1\">{s.title}</div>\n            <div className=\"text-sm opacity-90\">{s.content}</div>\n            <div className=\"mt-2 flex gap-2\">\n              <button className=\"px-3 py-1.5 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\">\n                Copy\n              </button>\n              <button className=\"px-3 py-1.5 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\">\n                Edit\n              </button>\n              <button className=\"px-3 py-1.5 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\">\n                Save as new\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction LinksPanel({ links }) {\n  const linkRows = [\n    { label: \"Connector sign‑up\", url: links?.connector, icon: Link2 },\n    { label: \"Quote / eligibility form\", url: links?.quote, icon: FileText },\n    { label: \"Book a call\", url: links?.booking, icon: CalendarClock },\n    { label: \"FAQs\", url: links?.faq, icon: FileText },\n  ];\n  \n  return (\n    <div className=\"space-y-2\">\n      {linkRows.map((r, idx) => (\n        <a \n          key={idx} \n          href={r.url} \n          target=\"_blank\" \n          rel=\"noreferrer\" \n          className=\"flex items-center justify-between p-3 rounded-2xl border bg-white/70 dark:bg-gray-900/70 border-gray-200 dark:border-gray-800 hover:border-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\"\n        >\n          <div className=\"flex items-center gap-2 text-sm\">\n            <r.icon className=\"w-4 h-4\"/> {r.label}\n          </div>\n          <ChevronRight className=\"w-4 h-4 opacity-60\"/>\n        </a>\n      ))}\n      <div className=\"text-xs opacity-70\">\n        Tip: add UTM tags to links so scans/visits attribute to this campaign.\n      </div>\n    </div>\n  );\n}\n\nfunction SettingsPanel({ dark, onToggleDark, onExport, onImport, onReset }) {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type === 'application/json') {\n      setSelectedFile(file);\n    } else {\n      alert('Please select a valid JSON file.');\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"font-medium\">Appearance</h4>\n        <ToggleRow \n          label=\"Dark mode\" \n          value={dark} \n          onChange={onToggleDark} \n        />\n      </div>\n      \n      <div className=\"space-y-2\">\n        <h4 className=\"font-medium\">Data & Privacy</h4>\n        <button className=\"w-full text-left px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors flex items-center gap-2\">\n          <Shield className=\"w-4 h-4\" />\n          Privacy settings\n        </button>\n        <button \n          onClick={onExport}\n          className=\"w-full text-left px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors flex items-center gap-2\"\n        >\n          <Download className=\"w-4 h-4\" />\n          Export all data\n        </button>\n        <button \n          onClick={() => document.getElementById('import-file').click()}\n          className=\"w-full text-left px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors flex items-center gap-2\"\n        >\n          <Upload className=\"w-4 h-4\" />\n          Import data\n        </button>\n        <input\n          id=\"import-file\"\n          type=\"file\"\n          accept=\".json\"\n          onChange={handleFileSelect}\n          style={{ display: 'none' }}\n        />\n        {selectedFile && (\n          <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-800\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-sm\">\n                <div className=\"font-medium\">Selected file: {selectedFile.name}</div>\n                <div className=\"text-xs opacity-70\">Ready to import</div>\n              </div>\n              <div className=\"flex gap-2\">\n                <button \n                  onClick={() => onImport(selectedFile)}\n                  className=\"px-3 py-1 rounded-lg bg-blue-600 text-white text-xs hover:bg-blue-700 transition-colors\"\n                >\n                  Import\n                </button>\n                <button \n                  onClick={() => setSelectedFile(null)}\n                  className=\"px-3 py-1 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 text-xs hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n        <button \n          onClick={onReset}\n          className=\"w-full text-left px-3 py-2 rounded-xl bg-red-50 dark:bg-red-900/20 text-red-600 dark:text-red-400 text-sm hover:bg-red-100 dark:hover:bg-red-900/30 transition-colors flex items-center gap-2 border border-red-200 dark:border-red-800\"\n        >\n          <Trash2 className=\"w-4 h-4\" />\n          Reset all data\n        </button>\n      </div>\n      \n      <div className=\"space-y-2\">\n        <h4 className=\"font-medium\">Support</h4>\n\n        <button \n          onClick={() => setShowAbout(true)}\n          className=\"w-full text-left px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors flex items-center gap-2\"\n        >\n          <Info className=\"w-4 h-4\" />\n          About\n        </button>\n      </div>\n      \n      <div className=\"pt-4 border-t border-gray-200 dark:border-gray-800\">\n        <button className=\"w-full text-left px-3 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors flex items-center gap-2 text-error-600 dark:text-error-400\">\n          <LogOut className=\"w-4 h-4\" />\n          Sign out\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction HelpPanel() {\n  const [expandedSections, setExpandedSections] = useState({\n    quickStart: true, // Start with Quick Start expanded\n    workflow: false,\n    status: false,\n    outcomes: false,\n    tips: false,\n    faq: false\n  });\n\n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Quick Start Guide */}\n      <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n        <button \n          onClick={() => toggleSection('quickStart')}\n          className=\"w-full p-4 bg-gray-50 dark:bg-gray-900/20 flex items-center justify-between hover:bg-gray-100 dark:hover:bg-gray-900/30 transition-colors\"\n        >\n          <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n            <Target className=\"w-5 h-5\" />\n            Quick Start Guide\n          </h3>\n          <ChevronRight className={`w-5 h-5 transition-transform ${expandedSections.quickStart ? 'rotate-90' : ''}`} />\n        </button>\n        {expandedSections.quickStart && (\n          <div className=\"p-4 space-y-3\">\n            <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-800\">\n              <div className=\"font-medium text-blue-800 dark:text-blue-200 mb-2\">1. Create Your First Campaign</div>\n              <div className=\"text-blue-700 dark:text-blue-300\">\n                • Go to <strong>Campaigns</strong> tab<br/>\n                • Click <strong>\"Create New Campaign\"</strong><br/>\n                • Enter campaign name, area, and your UW links\n              </div>\n            </div>\n            \n            <div className=\"p-3 bg-green-50 dark:bg-green-900/20 rounded-xl border border-green-200 dark:border-green-800\">\n              <div className=\"font-medium text-green-800 dark:text-green-200 mb-2\">2. Add Streets & Properties</div>\n              <div className=\"text-green-700 dark:text-green-300\">\n                • Go to <strong>Streets</strong> tab<br/>\n                • Click <strong>\"Add New Street\"</strong><br/>\n                • Enter street name, postcode, and property numbers/names (comma-separated)\n              </div>\n            </div>\n            \n            <div className=\"p-3 bg-purple-50 dark:bg-purple-900/20 rounded-xl border border-purple-200 dark:border-purple-800\">\n              <div className=\"font-medium text-purple-800 dark:text-purple-200 mb-2\">3. Track Your Activity</div>\n              <div className=\"text-purple-700 dark:text-purple-300\">\n                • Click on any property number to open it<br/>\n                • Mark as <strong>Dropped</strong> (letter delivered)<br/>\n                • Mark as <strong>Knocked</strong> (door knocked)<br/>\n                • Mark as <strong>Spoke</strong> (conversation had)<br/>\n                • Select conversation outcome\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Daily Workflow */}\n      <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n        <button \n          onClick={() => toggleSection('workflow')}\n          className=\"w-full p-4 bg-gray-50 dark:bg-gray-900/20 flex items-center justify-between hover:bg-gray-100 dark:hover:bg-gray-900/30 transition-colors\"\n        >\n          <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n            <BarChart3 className=\"w-5 h-5\" />\n            Daily Workflow\n          </h3>\n          <ChevronRight className={`w-5 h-5 transition-transform ${expandedSections.workflow ? 'rotate-90' : ''}`} />\n        </button>\n        {expandedSections.workflow && (\n          <div className=\"p-4 space-y-2 text-sm\">\n            <div className=\"flex items-start gap-3 p-3 bg-gray-50 dark:bg-gray-900/20 rounded-xl\">\n              <div className=\"w-6 h-6 rounded-full bg-blue-500 text-white text-xs flex items-center justify-center flex-shrink-0 mt-0.5\">1</div>\n              <div>\n                <div className=\"font-medium\">Start Your Day</div>\n                <div className=\"text-gray-600 dark:text-gray-400\">Check the Dashboard for today's follow-ups and review yesterday's activity</div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-3 p-3 bg-gray-50 dark:bg-gray-900/20 rounded-xl\">\n              <div className=\"w-6 h-6 rounded-full bg-green-500 text-white text-xs flex items-center justify-center flex-shrink-0 mt-0.5\">2</div>\n              <div>\n                <div className=\"font-medium\">Drop Letters</div>\n                <div className=\"text-gray-600 dark:text-gray-400\">Go to Streets tab, select your target street, and mark properties as \"Dropped\"</div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-3 p-3 bg-gray-50 dark:bg-gray-900/20 rounded-xl\">\n              <div className=\"w-6 h-6 rounded-full bg-orange-500 text-white text-xs flex items-center justify-center flex-shrink-0 mt-0.5\">3</div>\n              <div>\n                <div className=\"font-medium\">Follow Up</div>\n                <div className=\"text-gray-600 dark:text-gray-400\">Return to properties where letters were dropped, knock doors, and have conversations</div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-3 p-3 bg-gray-50 dark:bg-gray-900/20 rounded-xl\">\n              <div className=\"w-6 h-6 rounded-full bg-purple-500 text-white text-xs flex items-center justify-center flex-shrink-0 mt-0.5\">4</div>\n              <div>\n                <div className=\"font-medium\">Record Outcomes</div>\n                <div className=\"text-gray-600 dark:text-gray-400\">Mark properties as \"Spoke\" and select the appropriate conversation outcome</div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start gap-3 p-3 bg-gray-50 dark:bg-gray-900/20 rounded-xl\">\n              <div className=\"w-6 h-6 rounded-full bg-red-500 text-white text-xs flex items-center justify-center flex-shrink-0 mt-0.5\">5</div>\n              <div>\n                <div className=\"font-medium\">Schedule Follow-ups</div>\n                <div className=\"text-gray-600 dark:text-gray-400\">Set reminders for interested prospects and review your daily progress</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Property Status Guide */}\n      <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n        <button \n          onClick={() => toggleSection('status')}\n          className=\"w-full p-4 bg-gray-50 dark:bg-gray-900/20 flex items-center justify-between hover:bg-gray-100 dark:hover:bg-gray-900/30 transition-colors\"\n        >\n          <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n            <Check className=\"w-5 h-5\" />\n            Property Status Guide\n          </h3>\n          <ChevronRight className={`w-5 h-5 transition-transform ${expandedSections.status ? 'rotate-90' : ''}`} />\n        </button>\n        {expandedSections.status && (\n          <div className=\"p-4\">\n            <div className=\"grid md:grid-cols-2 gap-3 text-sm\">\n              <div className=\"p-3 border border-orange-200 dark:border-orange-800 bg-orange-50 dark:bg-orange-900/20 rounded-xl\">\n                <div className=\"font-medium text-orange-800 dark:text-orange-200\">Dropped</div>\n                <div className=\"text-orange-700 dark:text-orange-300\">Letter delivered through letterbox</div>\n              </div>\n              <div className=\"p-3 border border-blue-200 dark:border-blue-800 bg-blue-50 dark:bg-blue-900/20 rounded-xl\">\n                <div className=\"font-medium text-blue-800 dark:text-blue-200\">Knocked</div>\n                <div className=\"text-blue-700 dark:text-blue-300\">Door knocked, no answer or brief interaction</div>\n              </div>\n              <div className=\"p-3 border border-green-200 dark:border-green-800 bg-green-50 dark:bg-green-900/20 rounded-xl\">\n                <div className=\"font-medium text-green-800 dark:text-green-200\">Spoke</div>\n                <div className=\"text-green-700 dark:text-green-300\">Full conversation had with resident</div>\n              </div>\n              <div className=\"p-3 border border-gray-200 dark:border-gray-800 bg-gray-50 dark:bg-gray-900/20 rounded-xl\">\n                <div className=\"font-medium text-gray-800 dark:text-gray-200\">Not Started</div>\n                <div className=\"text-gray-700 dark:text-gray-300\">No activity recorded yet</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Conversation Outcomes */}\n      <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n        <button \n          onClick={() => toggleSection('outcomes')}\n          className=\"w-full p-4 bg-gray-50 dark:bg-gray-900/20 flex items-center justify-between hover:bg-gray-100 dark:hover:bg-gray-900/30 transition-colors\"\n        >\n          <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n            <MessageSquare className=\"w-5 h-5\" />\n            Conversation Outcomes\n          </h3>\n          <ChevronRight className={`w-5 h-5 transition-transform ${expandedSections.outcomes ? 'rotate-90' : ''}`} />\n        </button>\n        {expandedSections.outcomes && (\n          <div className=\"p-4\">\n            <div className=\"grid md:grid-cols-2 gap-3 text-sm\">\n              <div className=\"p-3 border border-green-200 dark:border-green-800 bg-green-50 dark:bg-green-900/20 rounded-xl\">\n                <div className=\"font-medium text-green-800 dark:text-green-200\">Interested</div>\n                <div className=\"text-green-700 dark:text-green-300\">Wants to learn more about UW</div>\n              </div>\n              <div className=\"p-3 border border-green-200 dark:border-green-800 bg-green-50 dark:bg-green-900/20 rounded-xl\">\n                <div className=\"font-medium text-green-800 dark:text-green-200\">Customer Signed</div>\n                <div className=\"text-green-700 dark:text-green-300\">Successfully signed up with UW</div>\n              </div>\n              <div className=\"p-3 border border-green-200 dark:border-green-800 bg-green-50 dark:bg-green-900/20 rounded-xl\">\n                <div className=\"font-medium text-green-800 dark:text-green-200\">Appointment Booked</div>\n                <div className=\"text-green-700 dark:text-green-300\">Meeting scheduled for follow-up</div>\n              </div>\n              <div className=\"p-3 border border-yellow-200 dark:border-yellow-800 bg-yellow-50 dark:bg-yellow-900/20 rounded-xl\">\n                <div className=\"font-medium text-yellow-800 dark:text-yellow-200\">No for Now</div>\n                <div className=\"text-yellow-700 dark:text-yellow-300\">Not interested at this time</div>\n              </div>\n              <div className=\"p-3 border border-blue-200 dark:border-blue-800 bg-blue-50 dark:bg-blue-900/20 rounded-xl\">\n                <div className=\"font-medium text-blue-800 dark:text-blue-200\">Already with UW</div>\n                <div className=\"text-blue-700 dark:text-blue-300\">Customer is already a UW member</div>\n              </div>\n                        <div className=\"p-3 border border-red-200 dark:border-red-800 bg-red-50 dark:bg-red-900/20 rounded-xl\">\n            <div className=\"font-medium text-red-800 dark:text-red-200\">Not Interested</div>\n            <div className=\"text-red-700 dark:text-red-300\">Definitely not interested</div>\n          </div>\n          <div className=\"p-3 border border-gray-200 dark:border-gray-800 bg-gray-50 dark:bg-gray-900/20 rounded-xl\">\n            <div className=\"font-medium text-gray-800 dark:text-gray-200\">Unreachable</div>\n            <div className=\"text-gray-700 dark:text-gray-300\">Unable to contact after multiple attempts</div>\n          </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Tips & Best Practices */}\n      <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n        <button \n          onClick={() => toggleSection('tips')}\n          className=\"w-full p-4 bg-gray-50 dark:bg-gray-900/20 flex items-center justify-between hover:bg-gray-100 dark:hover:bg-gray-900/30 transition-colors\"\n        >\n          <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n            <Info className=\"w-5 h-5\" />\n            Tips & Best Practices\n          </h3>\n          <ChevronRight className={`w-5 h-5 transition-transform ${expandedSections.tips ? 'rotate-90' : ''}`} />\n        </button>\n        {expandedSections.tips && (\n          <div className=\"p-4 space-y-2 text-sm\">\n            <div className=\"p-3 bg-amber-50 dark:bg-amber-900/20 rounded-xl border border-amber-200 dark:border-amber-800\">\n              <div className=\"font-medium text-amber-800 dark:text-amber-200 mb-1\">📱 Use Scripts & Links</div>\n              <div className=\"text-amber-700 dark:text-amber-300\">Open the Scripts and Links drawers while on a property for quick access to talking points and UW resources.</div>\n            </div>\n            \n            <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-800\">\n              <div className=\"font-medium text-blue-800 dark:text-blue-200 mb-1\">📊 Daily Tracking</div>\n              <div className=\"text-blue-700 dark:text-blue-300\">The Dashboard shows only today's activity. Use Reports for overall campaign progress and historical data.</div>\n            </div>\n            \n            <div className=\"p-3 bg-green-50 dark:bg-green-900/20 rounded-xl border border-green-200 dark:border-green-800\">\n              <div className=\"font-medium text-green-800 dark:text-green-200 mb-1\">🏠 Property Names</div>\n              <div className=\"text-green-700 dark:text-green-300\">You can use house names (e.g., \"Birch Tree House\") in addition to numbers. Separate multiple properties with commas.</div>\n            </div>\n            \n            <div className=\"p-3 bg-purple-50 dark:bg-purple-900/20 rounded-xl border border-purple-200 dark:border-purple-800\">\n              <div className=\"font-medium text-purple-800 dark:text-purple-200 mb-1\">🔄 Status Updates</div>\n              <div className=\"text-purple-700 dark:text-purple-300\">You can toggle statuses on/off if you make a mistake. Click the same button again to remove a status.</div>\n            </div>\n            \n            <div className=\"p-3 bg-indigo-50 dark:bg-indigo-900/20 rounded-xl border border-indigo-200 dark:border-indigo-800\">\n              <div className=\"font-medium text-indigo-800 dark:text-indigo-200 mb-1\">💾 Data Backup</div>\n              <div className=\"text-indigo-700 dark:text-indigo-300\">Regularly export your data from Settings to keep a backup of your campaigns and progress.</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* FAQ */}\n      <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n        <button \n          onClick={() => toggleSection('faq')}\n          className=\"w-full p-4 bg-gray-50 dark:bg-gray-900/20 flex items-center justify-between hover:bg-gray-100 dark:hover:bg-gray-900/30 transition-colors\"\n        >\n          <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n            <HelpCircle className=\"w-5 h-5\" />\n            Frequently Asked Questions\n          </h3>\n          <ChevronRight className={`w-5 h-5 transition-transform ${expandedSections.faq ? 'rotate-90' : ''}`} />\n        </button>\n        {expandedSections.faq && (\n          <div className=\"p-4 space-y-3 text-sm\">\n            <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n              <div className=\"p-3 bg-gray-50 dark:bg-gray-900/20 font-medium\">How do I add a new street to an existing campaign?</div>\n              <div className=\"p-3\">Go to the Streets tab and click \"Add New Street\". Enter the street name, postcode, and property numbers separated by commas.</div>\n            </div>\n            \n            <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n              <div className=\"p-3 bg-gray-50 dark:bg-gray-900/20 font-medium\">Can I edit property numbers after creating a street?</div>\n              <div className=\"p-3\">Yes! Click the \"Properties\" button on any street card to open the Property Manager where you can add, remove, or edit individual properties.</div>\n            </div>\n            \n            <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n              <div className=\"p-3 bg-gray-50 dark:bg-gray-900/20 font-medium\">What's the difference between Dashboard and Reports?</div>\n              <div className=\"p-3\">Dashboard shows today's activity only, perfect for daily tracking. Reports shows all-time data and campaign overviews.</div>\n            </div>\n            \n            <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n              <div className=\"p-3 bg-gray-50 dark:bg-gray-900/20 font-medium\">How do I search and filter campaigns/streets?</div>\n              <div className=\"p-3\">Use the \"Search & Filter\" section in Campaigns and Streets tabs. You can search by name, filter by status, and sort by different criteria.</div>\n            </div>\n            \n            <div className=\"border border-gray-200 dark:border-gray-800 rounded-xl overflow-hidden\">\n              <div className=\"p-3 bg-gray-50 dark:bg-gray-900/20 font-medium\">Can I use this app offline?</div>\n              <div className=\"p-3\">Yes! This is a Progressive Web App (PWA) that works offline. Your data is stored locally on your device.</div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction AboutPanel() {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-center\">\n        <div className=\"w-16 h-16 rounded-2xl bg-purple-600 flex items-center justify-center mx-auto mb-4 shadow-lg\">\n          <span className=\"text-white font-bold text-xl\">UW</span>\n        </div>\n        <h3 className=\"text-lg font-semibold mb-2\">UW Street Smart</h3>\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n          Neighbourhood Letters Activity Tracker\n        </p>\n      </div>\n\n      <div className=\"space-y-3 text-sm\">\n        <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-800\">\n          <div className=\"font-medium text-blue-800 dark:text-blue-200 mb-1\">Version</div>\n          <div className=\"text-blue-700 dark:text-blue-300\">1.0.0</div>\n        </div>\n\n        <div className=\"p-3 bg-green-50 dark:bg-green-900/20 rounded-xl border border-green-200 dark:border-green-800\">\n          <div className=\"font-medium text-green-800 dark:text-green-200 mb-1\">Built For</div>\n          <div className=\"text-green-700 dark:text-green-300\">UW Partners making a difference in their communities</div>\n        </div>\n\n        <div className=\"p-3 bg-purple-50 dark:bg-purple-900/20 rounded-xl border border-purple-200 dark:border-purple-800\">\n          <div className=\"font-medium text-purple-800 dark:text-purple-200 mb-1\">Features</div>\n          <div className=\"text-purple-700 dark:text-purple-300 space-y-1\">\n            <div>• Campaign & street management</div>\n            <div>• Property activity tracking</div>\n            <div>• Conversation outcomes</div>\n            <div>• Offline-first PWA</div>\n            <div>• Daily progress dashboard</div>\n            <div>• Data export/import</div>\n          </div>\n        </div>\n\n        <div className=\"p-3 bg-amber-50 dark:bg-amber-900/20 rounded-xl border border-amber-200 dark:border-amber-800\">\n          <div className=\"font-medium text-amber-800 dark:text-amber-200 mb-1\">Privacy</div>\n          <div className=\"text-amber-700 dark:text-amber-300\">\n            Your data is stored locally on your device. No personal information is sent to external servers.\n          </div>\n        </div>\n\n        <div className=\"text-center text-xs text-gray-500 dark:text-gray-400 pt-4 border-t border-gray-200 dark:border-gray-800\">\n          Built with React, Vite, and Tailwind CSS<br/>\n          Progressive Web App technology\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction SuccessTipsPanel() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Timing & Strategy */}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n          <Clock className=\"w-5 h-5\" />\n          Timing & Strategy\n        </h3>\n        <div className=\"grid md:grid-cols-2 gap-3\">\n          <div className=\"p-4 bg-green-50 dark:bg-green-900/20 rounded-xl border border-green-200 dark:border-green-800\">\n            <div className=\"font-medium text-green-800 dark:text-green-200 mb-2\">🎯 Best Drop Times</div>\n            <div className=\"text-sm text-green-700 dark:text-green-300 space-y-1\">\n              <div>• <strong>Evenings:</strong> 6-8pm (people home from work)</div>\n              <div>• <strong>Weekends:</strong> 10am-2pm (avoid meal times)</div>\n              <div>• <strong>Avoid:</strong> Monday mornings, Friday evenings</div>\n            </div>\n          </div>\n          \n          <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-800\">\n            <div className=\"font-medium text-blue-800 dark:text-blue-200 mb-2\">📝 Follow Up Timing</div>\n            <div className=\"text-sm text-blue-700 dark:text-blue-300 space-y-1\">\n              <div>• <strong>Return:</strong> 2-3 days after dropping letters</div>\n              <div>• <strong>Best times:</strong> Same as drop times</div>\n              <div>• <strong>Multiple attempts:</strong> Try 3-4 times before marking unreachable</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Conversation Techniques */}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n          <MessageSquare className=\"w-5 h-5\" />\n          Conversation Techniques\n        </h3>\n        <div className=\"space-y-3\">\n          <div className=\"p-4 bg-purple-50 dark:bg-purple-900/20 rounded-xl border border-purple-200 dark:border-purple-800\">\n            <div className=\"font-medium text-purple-800 dark:text-purple-200 mb-2\">💡 Opening Lines</div>\n            <div className=\"text-sm text-purple-700 dark:text-purple-300 space-y-2\">\n              <div><strong>Standard:</strong> \"Hi! I'm [Name] and I'm local. I've been helping neighbours in this area save money on their household bills. I dropped a letter through earlier - have you had a chance to look at it?\"</div>\n              <div><strong>Direct:</strong> \"Hi! I'm helping families in [Area] save money on their bills. I left a letter earlier - would you like me to check if you could save money too?\"</div>\n              <div><strong>Community:</strong> \"Hi! I'm from UW and I've been working with families in this neighbourhood to reduce their bills. Have you seen the letter I dropped through?\"</div>\n            </div>\n          </div>\n          \n          <div className=\"p-4 bg-amber-50 dark:bg-amber-900/20 rounded-xl border border-amber-200 dark:border-amber-800\">\n            <div className=\"font-medium text-amber-800 dark:text-amber-200 mb-2\">🎭 Handling Objections</div>\n            <div className=\"text-sm text-amber-700 dark:text-amber-300 space-y-2\">\n              <div><strong>\"Not interested\":</strong> \"Totally fine! If things change, the letter has a QR code for a quick checker. No sales calls, just the numbers. Have a great day!\"</div>\n              <div><strong>\"Already with UW\":</strong> \"That's great! You might be eligible for additional savings or better bundles. Would you like me to check your current setup?\"</div>\n              <div><strong>\"Too busy\":</strong> \"I understand! It literally takes 2 minutes to check. If you're not saving money, you're not interested. If you are, we can book a proper time.\"</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Success Metrics */}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n          <BarChart3 className=\"w-5 h-5\" />\n          Success Metrics & Goals\n        </h3>\n        <div className=\"grid md:grid-cols-2 gap-3\">\n          <div className=\"p-4 bg-indigo-50 dark:bg-indigo-900/20 rounded-xl border border-indigo-200 dark:border-indigo-800\">\n            <div className=\"font-medium text-indigo-800 dark:text-indigo-200 mb-2\">📊 Realistic Targets</div>\n            <div className=\"text-sm text-indigo-700 dark:text-indigo-300 space-y-1\">\n              <div>• <strong>Drop rate:</strong> 50-100 letters per session</div>\n              <div>• <strong>Conversation rate:</strong> 15-25% of drops</div>\n              <div>• <strong>Interest rate:</strong> 5-10% of conversations</div>\n              <div>• <strong>Success rate:</strong> 2-5% of conversations</div>\n            </div>\n          </div>\n          \n          <div className=\"p-4 bg-emerald-50 dark:bg-emerald-900/20 rounded-xl border border-emerald-200 dark:border-emerald-800\">\n            <div className=\"font-medium text-emerald-800 dark:text-emerald-200 mb-2\">🎯 Daily Goals</div>\n            <div className=\"text-sm text-emerald-700 dark:text-emerald-300 space-y-1\">\n              <div>• <strong>Drop:</strong> 50+ letters</div>\n              <div>• <strong>Follow up:</strong> 20+ properties</div>\n              <div>• <strong>Conversations:</strong> 5+ meaningful chats</div>\n              <div>• <strong>Interested leads:</strong> 1+ per day</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Best Practices */}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n          <Check className=\"w-5 h-5\" />\n          Best Practices\n        </h3>\n        <div className=\"space-y-2\">\n          <div className=\"p-3 bg-gray-50 dark:bg-gray-900/20 rounded-xl border border-gray-200 dark:border-gray-800\">\n            <div className=\"text-sm space-y-1\">\n              <div>• <strong>Dress appropriately:</strong> Smart casual, UW branded if possible</div>\n              <div>• <strong>Be confident:</strong> You're offering genuine value, not selling</div>\n              <div>• <strong>Listen actively:</strong> Understand their situation before suggesting solutions</div>\n              <div>• <strong>Follow up promptly:</strong> Use the app to track and schedule follow-ups</div>\n              <div>• <strong>Stay positive:</strong> Every \"no\" gets you closer to a \"yes\"</div>\n              <div>• <strong>Use the app:</strong> Track everything to improve your approach</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Common Mistakes */}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n          <AlertTriangle className=\"w-5 h-5\" />\n          Common Mistakes to Avoid\n        </h3>\n        <div className=\"space-y-2\">\n          <div className=\"p-3 bg-red-50 dark:bg-red-900/20 rounded-xl border border-red-200 dark:border-red-800\">\n            <div className=\"text-sm space-y-1\">\n              <div>• <strong>Rushing conversations:</strong> Take time to build rapport</div>\n              <div>• <strong>Not following up:</strong> Most success comes from follow-up visits</div>\n              <div>• <strong>Poor timing:</strong> Avoid meal times and early mornings</div>\n              <div>• <strong>Being pushy:</strong> Respect \"no\" and move on gracefully</div>\n              <div>• <strong>Not tracking activity:</strong> Use the app to learn what works</div>\n              <div>• <strong>Giving up too early:</strong> Try multiple times before marking unreachable</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Reports({ campaigns }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n  const [sortColumn, setSortColumn] = useState(\"date\");\n  const [sortDirection, setSortDirection] = useState(\"desc\");\n  const [showFilters, setShowFilters] = useState(false);\n\n  const flat = [];\n  campaigns.forEach(c => c.streets.forEach(s => s.properties.forEach(p => {\n    // Determine the most recent activity timestamp\n    let latestActivity = null;\n    let latestActivityType = '';\n    \n    if (p.spokeAt) {\n      latestActivity = p.spokeAt;\n      latestActivityType = 'spoke';\n    } else if (p.knockedAt) {\n      latestActivity = p.knockedAt;\n      latestActivityType = 'knocked';\n    } else if (p.droppedAt) {\n      latestActivity = p.droppedAt;\n      latestActivityType = 'dropped';\n    } else if (p.resultAt) {\n      latestActivity = p.resultAt;\n      latestActivityType = 'result';\n    }\n    \n    flat.push({ \n      campaign: c.name, \n      street: s.name, \n      property: p.label, \n      dropped: p.dropped, \n      knocked: p.knocked, \n      spoke: p.spoke, \n      result: p.result || 'none', \n      followUpAt: p.followUpAt || '',\n      droppedAt: p.droppedAt || '',\n      knockedAt: p.knockedAt || '',\n      spokeAt: p.spokeAt || '',\n      resultAt: p.resultAt || '',\n      latestActivity: latestActivity,\n      latestActivityType: latestActivityType\n    });\n  })));\n\n  // Filter and sort the data\n  const filteredAndSortedData = useMemo(() => {\n    let filtered = flat.filter(r => {\n      const matchesSearch = \n        r.campaign.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        r.street.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        r.property.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      const matchesStatus = statusFilter === \"all\" || \n        (statusFilter === \"dropped\" && r.dropped) ||\n        (statusFilter === \"knocked\" && r.knocked) ||\n        (statusFilter === \"spoke\" && r.spoke) ||\n        (statusFilter === \"followup\" && r.followUpAt) ||\n        (statusFilter === \"interested\" && (r.result === \"interested\" || r.result === \"customer_signed\" || r.result === \"appointment_booked\"));\n      \n      return matchesSearch && matchesStatus;\n    });\n\n    // Sort the data\n    filtered.sort((a, b) => {\n      let aVal, bVal;\n      \n      switch (sortColumn) {\n        case \"date\":\n          aVal = a.latestActivity || \"\";\n          bVal = b.latestActivity || \"\";\n          break;\n        case \"campaign\":\n          aVal = a.campaign;\n          bVal = b.campaign;\n          break;\n        case \"street\":\n          aVal = a.street;\n          bVal = b.street;\n          break;\n        case \"property\":\n          aVal = parseInt(a.property) || a.property;\n          bVal = parseInt(b.property) || b.property;\n          break;\n        case \"dropped\":\n          aVal = a.dropped ? 1 : 0;\n          bVal = b.dropped ? 1 : 0;\n          break;\n        case \"knocked\":\n          aVal = a.knocked ? 1 : 0;\n          bVal = b.knocked ? 1 : 0;\n          break;\n        case \"spoke\":\n          aVal = a.spoke ? 1 : 0;\n          bVal = b.spoke ? 1 : 0;\n          break;\n        case \"result\":\n          aVal = a.result;\n          bVal = b.result;\n          break;\n        case \"followup\":\n          aVal = a.followUpAt || \"\";\n          bVal = b.followUpAt || \"\";\n          break;\n        default:\n          aVal = a.latestActivity || \"\";\n          bVal = b.latestActivity || \"\";\n      }\n      \n      if (aVal < bVal) return sortDirection === \"asc\" ? -1 : 1;\n      if (aVal > bVal) return sortDirection === \"asc\" ? 1 : -1;\n      return 0;\n    });\n\n    return filtered;\n  }, [flat, searchTerm, statusFilter, sortColumn, sortDirection]);\n\n  const handleSort = (column) => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortColumn(column);\n      setSortDirection(\"asc\");\n    }\n  };\n\n  const SortIcon = ({ column }) => {\n    if (sortColumn !== column) {\n      return <ChevronUp className=\"w-3 h-3 opacity-30\" />;\n    }\n    return sortDirection === \"asc\" ? \n      <ChevronUp className=\"w-3 h-3\" /> : \n      <ChevronDown className=\"w-3 h-3\" />;\n  };\n\n  const getSortButtonClass = (column) => {\n    const baseClass = \"flex items-center gap-1 transition-all\";\n    if (sortColumn === column) {\n      return `${baseClass} bg-primary-50 dark:bg-primary-900/20 text-primary-700 dark:text-primary-300 px-2 py-1 rounded-lg`;\n    }\n    return `${baseClass} hover:opacity-100 hover:bg-gray-50 dark:hover:bg-gray-900/20 px-2 py-1 rounded-lg`;\n  };\n\n  const totals = useMemo(() => {\n    const t = { \n      letters: 0, \n      knocked: 0, \n      spoke: 0, \n      interested: 0, \n      followups: 0,\n      outcomes: {\n        interested: 0,\n        customer_signed: 0,\n        appointment_booked: 0,\n        no_for_now: 0,\n        already_uw: 0,\n        not_interested: 0\n      }\n    };\n    flat.forEach(r => {\n      if (r.dropped) t.letters++;\n      if (r.knocked) t.knocked++;\n      if (r.spoke) t.spoke++;\n      if (r.result === 'interested' || r.result === 'customer_signed' || r.result === 'appointment_booked') t.interested++;\n      if (r.followUpAt) t.followups++;\n      \n      // Track all outcomes\n      if (r.result && r.result !== 'none') {\n        t.outcomes[r.result] = (t.outcomes[r.result] || 0) + 1;\n      }\n    });\n    return t;\n  }, [campaigns]);\n\n  return (\n    <div className=\"space-y-4\">\n      <SectionCard title=\"Overview\" icon={FileText}>\n        <div className=\"grid md:grid-cols-5 gap-3\">\n          <Stat icon={UploadCloud} label=\"Letters\" value={totals.letters} />\n          <Stat icon={Check} label=\"Knocked\" value={totals.knocked} />\n          <Stat icon={MessageSquare} label=\"Spoke\" value={totals.spoke} />\n          <Stat icon={CheckCircle} label=\"Interested\" value={totals.interested} />\n          <Stat icon={CalendarClock} label=\"Follow‑ups\" value={totals.followups} />\n        </div>\n      </SectionCard>\n      \n      <SectionCard title=\"Conversation Outcomes\" icon={MessageSquare}>\n        <div className=\"grid md:grid-cols-2 gap-3\">\n          <div className=\"p-3 rounded-xl bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800\">\n            <div className=\"text-lg font-semibold text-green-700 dark:text-green-300\">{totals.outcomes.interested}</div>\n            <div className=\"text-sm text-green-600 dark:text-green-400\">Interested</div>\n          </div>\n          <div className=\"p-3 rounded-xl bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800\">\n            <div className=\"text-lg font-semibold text-green-700 dark:text-green-300\">{totals.outcomes.customer_signed}</div>\n            <div className=\"text-sm text-green-600 dark:text-green-400\">Customer Signed</div>\n          </div>\n          <div className=\"p-3 rounded-xl bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800\">\n            <div className=\"text-lg font-semibold text-green-700 dark:text-green-300\">{totals.outcomes.appointment_booked}</div>\n            <div className=\"text-sm text-green-600 dark:text-green-400\">Appointment Booked</div>\n          </div>\n          <div className=\"p-3 rounded-xl bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800\">\n            <div className=\"text-lg font-semibold text-yellow-700 dark:text-yellow-300\">{totals.outcomes.no_for_now}</div>\n            <div className=\"text-sm text-yellow-600 dark:text-yellow-400\">No for Now</div>\n          </div>\n                      <div className=\"p-3 rounded-xl bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800\">\n              <div className=\"text-lg font-semibold text-blue-700 dark:text-blue-300\">{totals.outcomes.already_uw}</div>\n              <div className=\"text-sm text-blue-600 dark:text-blue-400\">Already with UW</div>\n            </div>\n          <div className=\"p-3 rounded-xl bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800\">\n            <div className=\"text-lg font-semibold text-red-700 dark:text-red-300\">{totals.outcomes.not_interested}</div>\n            <div className=\"text-sm text-red-600 dark:text-red-400\">Not Interested</div>\n          </div>\n          <div className=\"p-3 rounded-xl bg-gray-50 dark:bg-gray-900/20 border border-gray-200 dark:border-gray-800\">\n            <div className=\"text-lg font-semibold text-gray-700 dark:text-gray-300\">{totals.outcomes.unreachable || 0}</div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Unreachable</div>\n          </div>\n\n        </div>\n      </SectionCard>\n      <SectionCard title=\"Activity log\" icon={ListChecks}>\n        {/* Search and Filter Controls */}\n        <div className=\"mb-4 space-y-3\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"flex-1 relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n              <input \n                type=\"text\" \n                value={searchTerm} \n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder=\"Search campaigns, streets, properties...\"\n                className=\"w-full pl-10 pr-3 py-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n              />\n            </div>\n            <button \n              onClick={() => setShowFilters(!showFilters)}\n              className={`p-2 rounded-xl border transition-colors ${\n                showFilters \n                  ? 'bg-primary-100 dark:bg-primary-900/20 border-primary-200 dark:border-primary-800 text-primary-600 dark:text-primary-400'\n                  : 'bg-gray-100 dark:bg-gray-800 border-gray-200 dark:border-gray-700 text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700'\n              }`}\n              title=\"Toggle filters\"\n            >\n              <Filter className=\"w-4 h-4\" />\n            </button>\n          </div>\n          \n          {showFilters && (\n            <div className=\"p-3 bg-gray-50 dark:bg-gray-900/20 rounded-xl border border-gray-200 dark:border-gray-800\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-xs font-medium opacity-70\">Filter by:</label>\n                <select \n                  value={statusFilter} \n                  onChange={(e) => setStatusFilter(e.target.value)}\n                  className=\"px-3 py-1.5 rounded-lg bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-xs focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n                >\n                  <option value=\"all\">All activities</option>\n                  <option value=\"dropped\">Letters dropped</option>\n                  <option value=\"knocked\">Doors knocked</option>\n                  <option value=\"spoke\">Conversations had</option>\n                  <option value=\"followup\">Follow-ups scheduled</option>\n                  <option value=\"interested\">Interested prospects</option>\n                </select>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"text-xs opacity-70\">\n            Showing {filteredAndSortedData.length} of {flat.length} activities\n            <span className=\"hidden sm:inline\"> • Scroll horizontally to see all columns</span>\n            <span className=\"hidden sm:inline\"> • <span className=\"text-orange-600 dark:text-orange-400 font-medium\">D</span>=Letters dropped, <span className=\"text-blue-600 dark:text-blue-400 font-medium\">K</span>=Doors knocked, <span className=\"text-green-600 dark:text-green-400 font-medium\">S</span>=Conversations had</span>\n          </div>\n        </div>\n\n        <div className=\"relative\">\n          {/* Scroll indicator - only show on smaller screens */}\n          <div className=\"mb-2 flex justify-end xl:hidden\">\n            <div className=\"flex items-center gap-1 px-2 py-1 bg-gray-100 dark:bg-gray-800 rounded-lg text-xs text-gray-600 dark:text-gray-400 border border-gray-200 dark:border-gray-700\">\n              <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n              Scroll for more columns\n            </div>\n          </div>\n          \n          <div className=\"overflow-x-auto border border-gray-200 dark:border-gray-800 rounded-xl\">\n            <table className=\"w-full text-sm min-w-max\">\n              <thead className=\"text-left opacity-70 bg-gray-50 dark:bg-gray-900/20\">\n                <tr>\n                  <th className=\"py-2 px-3 sticky left-0 bg-gray-50 dark:bg-gray-900/20 z-20 border-r border-gray-200 dark:border-gray-700 w-24 shadow-sm\">\n                    <button \n                      onClick={() => handleSort(\"date\")}\n                      className={getSortButtonClass(\"date\")}\n                    >\n                      Date\n                      <SortIcon column=\"date\" />\n                    </button>\n                  </th>\n                <th className=\"py-2 px-3 hidden sm:table-cell w-24\">\n                  <button \n                    onClick={() => handleSort(\"campaign\")}\n                    className={getSortButtonClass(\"campaign\")}\n                  >\n                    Campaign\n                    <SortIcon column=\"campaign\" />\n                  </button>\n                </th>\n                <th className=\"py-2 px-3 hidden md:table-cell w-20\">\n                  <button \n                    onClick={() => handleSort(\"street\")}\n                    className={getSortButtonClass(\"street\")}\n                  >\n                    Street\n                    <SortIcon column=\"street\" />\n                  </button>\n                </th>\n                <th className=\"py-2 px-3 w-12\">\n                  <button \n                    onClick={() => handleSort(\"property\")}\n                    className={getSortButtonClass(\"property\")}\n                  >\n                    #\n                    <SortIcon column=\"property\" />\n                  </button>\n                </th>\n                <th className=\"py-2 px-3 hidden sm:table-cell w-12\">\n                  <button \n                    onClick={() => handleSort(\"dropped\")}\n                    className={getSortButtonClass(\"dropped\")}\n                    title=\"Letters dropped\"\n                  >\n                    D\n                    <SortIcon column=\"dropped\" />\n                  </button>\n                </th>\n                <th className=\"py-2 px-3 hidden sm:table-cell w-12\">\n                  <button \n                    onClick={() => handleSort(\"knocked\")}\n                    className={getSortButtonClass(\"knocked\")}\n                    title=\"Doors knocked\"\n                  >\n                    K\n                    <SortIcon column=\"knocked\" />\n                  </button>\n                </th>\n                <th className=\"py-2 px-3 hidden sm:table-cell w-12\">\n                  <button \n                    onClick={() => handleSort(\"spoke\")}\n                    className={getSortButtonClass(\"spoke\")}\n                    title=\"Conversations had\"\n                  >\n                    S\n                    <SortIcon column=\"spoke\" />\n                  </button>\n                </th>\n                <th className=\"py-2 px-3 w-20\">\n                  <button \n                    onClick={() => handleSort(\"result\")}\n                    className={getSortButtonClass(\"result\")}\n                  >\n                    Result\n                    <SortIcon column=\"result\" />\n                  </button>\n                </th>\n                <th className=\"py-2 px-3 hidden xl:table-cell w-24\">\n                  <button \n                    onClick={() => handleSort(\"followup\")}\n                    className={getSortButtonClass(\"followup\")}\n                  >\n                    Follow‑up\n                    <SortIcon column=\"followup\" />\n                  </button>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredAndSortedData.map((r, i) => (\n                <tr key={i} className=\"border-t border-gray-200 dark:border-gray-800 hover:bg-gray-50 dark:hover:bg-gray-900/20 transition-colors\">\n                  <td className=\"py-2 px-3 sticky left-0 bg-white dark:bg-gray-900 z-20 border-r border-gray-200 dark:border-gray-700 shadow-sm\">\n                    {r.latestActivity ? (\n                      <div className=\"text-xs\">\n                        <div className=\"font-medium\">{new Date(r.latestActivity).toLocaleDateString()}</div>\n                        <div className=\"text-gray-500 dark:text-gray-400 capitalize\">{r.latestActivityType}</div>\n                      </div>\n                    ) : (\n                      <span className=\"text-gray-400 dark:text-gray-600 text-xs\">—</span>\n                    )}\n                  </td>\n                  <td className=\"py-2 px-3 hidden sm:table-cell font-medium\">{r.campaign}</td>\n                  <td className=\"py-2 px-3 hidden md:table-cell\">{r.street}</td>\n                  <td className=\"py-2 px-3 text-xs max-w-24 truncate\" title={r.property}>{r.property}</td>\n                  <td className=\"py-2 px-3 hidden sm:table-cell\" title={r.dropped ? \"Letter dropped\" : \"No letter dropped\"}>\n                    {r.dropped ? (\n                      <span className=\"inline-flex items-center justify-center w-5 h-5 rounded-full bg-orange-100 dark:bg-orange-900/20 text-orange-600 dark:text-orange-400 text-xs\">\n                        ✓\n                      </span>\n                    ) : (\n                      <span className=\"text-gray-400 dark:text-gray-600\">—</span>\n                    )}\n                  </td>\n                  <td className=\"py-2 px-3 hidden sm:table-cell\" title={r.knocked ? \"Door knocked\" : \"No door knocked\"}>\n                    {r.knocked ? (\n                      <span className=\"inline-flex items-center justify-center w-5 h-5 rounded-full bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 text-xs\">\n                        ✓\n                      </span>\n                    ) : (\n                      <span className=\"text-gray-400 dark:text-gray-600\">—</span>\n                    )}\n                  </td>\n                  <td className=\"py-2 px-3 hidden sm:table-cell\" title={r.spoke ? \"Conversation had\" : \"No conversation\"}>\n                    {r.spoke ? (\n                      <span className=\"inline-flex items-center justify-center w-5 h-5 rounded-full bg-green-100 dark:bg-green-900/20 text-green-600 dark:text-green-400 text-xs\">\n                        ✓\n                      </span>\n                    ) : (\n                      <span className=\"text-gray-400 dark:text-gray-600\">—</span>\n                    )}\n                  </td>\n                  <td className=\"py-2 px-3\">\n                    {r.result === 'none' ? (\n                      <span className=\"text-gray-500 dark:text-gray-400\">—</span>\n                    ) : r.result === 'interested' || r.result === 'customer_signed' || r.result === 'appointment_booked' ? (\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-300\">\n                        {r.result.replace('_', ' ')}\n                      </span>\n                    ) : r.result === 'maybe' ? (\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 dark:bg-yellow-900/20 text-yellow-700 dark:text-yellow-300\">\n                        maybe\n                      </span>\n                    ) : r.result === 'no_for_now' ? (\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-orange-100 dark:bg-orange-900/20 text-orange-700 dark:text-orange-300\">\n                        no for now\n                      </span>\n                    ) : r.result === 'already_uw' ? (\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300\">\n                        already UW\n                      </span>\n                    ) : r.result === 'not_interested' ? (\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 dark:bg-red-900/20 text-red-700 dark:text-red-300\">\n                        not interested\n                      </span>\n                    ) : r.result === 'unreachable' ? (\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300\">\n                        unreachable\n                      </span>\n                    ) : (\n                      <span className=\"text-gray-600 dark:text-gray-400\">{r.result}</span>\n                    )}\n                  </td>\n                  <td className=\"py-2 px-3 hidden xl:table-cell\">\n                    {r.followUpAt ? (\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 dark:bg-purple-900/20 text-purple-700 dark:text-purple-300\">\n                        {new Date(r.followUpAt).toLocaleDateString()}\n                      </span>\n                    ) : (\n                      <span className=\"text-gray-400 dark:text-gray-600\">—</span>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        </div>\n      </SectionCard>\n    </div>\n  );\n}\n\n// Form components for creating new campaigns and streets\nfunction NewCampaignForm({ \n  onSubmit, \n  onCancel,\n  addressSearchTerm,\n  setAddressSearchTerm,\n  addressSuggestions,\n  selectedPostcode,\n  selectedTown,\n  availableStreets,\n  selectedStreets,\n  isLoadingAddresses,\n  addressLookupStep,\n  searchAddresses,\n  selectAddress,\n  toggleStreetSelection,\n  importSelectedStreets,\n  resetAddressLookup\n}) {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    area: \"\",\n    connector: \"\",\n    quote: \"\",\n    booking: \"\",\n    faq: \"\"\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.name.trim()) {\n      alert('Please enter a campaign name');\n      return;\n    }\n    onSubmit(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <label className=\"text-xs opacity-70\">Campaign Name *</label>\n        <input \n          type=\"text\" \n          value={formData.name} \n          onChange={e => setFormData(prev => ({ ...prev, name: e.target.value }))}\n          className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"e.g., Elmswell NL – Aug 2025\"\n          required\n        />\n      </div>\n      \n      <div>\n        <label className=\"text-xs opacity-70\">Postcode Area</label>\n        <input \n          type=\"text\" \n          value={formData.area} \n          onChange={e => setFormData(prev => ({ ...prev, area: e.target.value }))}\n          className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"e.g., IP30\"\n        />\n      </div>\n\n      <div className=\"space-y-2\">\n        <label className=\"text-xs opacity-70\">Campaign Links (Optional)</label>\n        <input \n          type=\"url\" \n          value={formData.connector} \n          onChange={e => setFormData(prev => ({ ...prev, connector: e.target.value }))}\n          className=\"w-full p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"Connector sign-up URL\"\n        />\n        <input \n          type=\"url\" \n          value={formData.quote} \n          onChange={e => setFormData(prev => ({ ...prev, quote: e.target.value }))}\n          className=\"w-full p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"Quote/eligibility form URL\"\n        />\n        <input \n          type=\"url\" \n          value={formData.booking} \n          onChange={e => setFormData(prev => ({ ...prev, booking: e.target.value }))}\n          className=\"w-full p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"Booking page URL\"\n        />\n        <input \n          type=\"url\" \n          value={formData.faq} \n          onChange={e => setFormData(prev => ({ ...prev, faq: e.target.value }))}\n          className=\"w-full p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"FAQ page URL\"\n        />\n      </div>\n\n      {/* Address Lookup Section */}\n      <div className=\"border-t border-gray-200 dark:border-gray-800 pt-4\">\n        <div className=\"flex items-center gap-2 mb-3\">\n          <MapPin className=\"w-4 h-4 text-primary-600\" />\n          <label className=\"text-sm font-medium\">Import Streets</label>\n        </div>\n        <p className=\"text-xs opacity-70 mb-3\">Search by postcode or town name to import streets automatically</p>\n        \n        {/* Step 1: Search */}\n        {addressLookupStep === \"search\" && (\n          <div className=\"space-y-3\">\n            <div className=\"relative\">\n              <input \n                type=\"text\" \n                value={addressSearchTerm} \n                onChange={e => {\n                  setAddressSearchTerm(e.target.value);\n                  if (e.target.value.length >= 3) {\n                    searchAddresses(e.target.value);\n                  } else {\n                    setAddressSuggestions([]);\n                  }\n                }}\n                className=\"w-full p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n                placeholder=\"Enter postcode or town name (e.g., IP30 or Elmswell)\"\n              />\n              {isLoadingAddresses && (\n                <div className=\"absolute right-3 top-2.5\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary-600\"></div>\n                </div>\n              )}\n            </div>\n            \n            {/* Suggestions */}\n            {addressSuggestions.length > 0 && (\n              <div className=\"max-h-32 overflow-y-auto border border-gray-200 dark:border-gray-800 rounded-lg\">\n                {addressSuggestions.map((suggestion, index) => (\n                  <button\n                    key={index}\n                    onClick={() => selectAddress(suggestion)}\n                    className=\"w-full p-2 text-left text-sm hover:bg-gray-50 dark:hover:bg-gray-800 border-b border-gray-100 dark:border-gray-700 last:border-b-0\"\n                  >\n                    {typeof suggestion === 'string' ? suggestion : suggestion.display}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Step 2: Select Streets */}\n        {addressLookupStep === \"select\" && (\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">{selectedTown}</p>\n                <p className=\"text-xs opacity-70\">{selectedPostcode}</p>\n              </div>\n              <button\n                onClick={resetAddressLookup}\n                className=\"text-xs text-gray-500 hover:text-gray-700 dark:hover:text-gray-300\"\n              >\n                Change\n              </button>\n            </div>\n            \n            <div className=\"max-h-32 overflow-y-auto border border-gray-200 dark:border-gray-800 rounded-lg\">\n              {availableStreets.map((street, index) => (\n                <label key={index} className=\"flex items-center p-2 hover:bg-gray-50 dark:hover:bg-gray-800 border-b border-gray-100 dark:border-gray-700 last:border-b-0\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedStreets.includes(street)}\n                    onChange={() => toggleStreetSelection(street)}\n                    className=\"mr-2\"\n                  />\n                  <span className=\"text-sm\">{street}</span>\n                </label>\n              ))}\n            </div>\n            \n            {selectedStreets.length > 0 && (\n              <button\n                onClick={importSelectedStreets}\n                className=\"w-full px-3 py-2 rounded-lg bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n              >\n                Import {selectedStreets.length} Street{selectedStreets.length !== 1 ? 's' : ''}\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex gap-3\">\n        <button \n          type=\"submit\"\n          className=\"flex-1 px-4 py-2 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n        >\n          Create Campaign\n        </button>\n        <button \n          type=\"button\"\n          onClick={onCancel}\n          className=\"flex-1 px-4 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n\nfunction ImportStreetsForm({ \n  onCancel,\n  addressSearchTerm,\n  setAddressSearchTerm,\n  addressSuggestions,\n  selectedPostcode,\n  selectedTown,\n  availableStreets,\n  selectedStreets,\n  isLoadingAddresses,\n  addressLookupStep,\n  searchAddresses,\n  selectAddress,\n  toggleStreetSelection,\n  importSelectedStreets,\n  resetAddressLookup\n}) {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"border-b border-gray-200 dark:border-gray-800 pb-4\">\n        <div className=\"flex items-center gap-2 mb-3\">\n          <MapPin className=\"w-4 h-4 text-primary-600\" />\n          <label className=\"text-sm font-medium\">Import Streets</label>\n        </div>\n        <p className=\"text-xs opacity-70\">Search by postcode or town name to import streets automatically</p>\n      </div>\n      \n      {/* Step 1: Search */}\n      {addressLookupStep === \"search\" && (\n        <div className=\"space-y-3\">\n          <div className=\"relative\">\n            <input \n              type=\"text\" \n              value={addressSearchTerm} \n              onChange={e => {\n                setAddressSearchTerm(e.target.value);\n                if (e.target.value.length >= 3) {\n                  searchAddresses(e.target.value);\n                } else {\n                  setAddressSuggestions([]);\n                }\n              }}\n              className=\"w-full p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n              placeholder=\"Enter postcode or town name (e.g., IP30 or Elmswell)\"\n            />\n            {isLoadingAddresses && (\n              <div className=\"absolute right-3 top-2.5\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary-600\"></div>\n              </div>\n            )}\n          </div>\n          \n          {/* Suggestions */}\n          {addressSuggestions.length > 0 && (\n            <div className=\"max-h-32 overflow-y-auto border border-gray-200 dark:border-gray-800 rounded-lg\">\n              {addressSuggestions.map((suggestion, index) => (\n                <button\n                  key={index}\n                  onClick={() => selectAddress(suggestion)}\n                  className=\"w-full p-2 text-left text-sm hover:bg-gray-50 dark:hover:bg-gray-800 border-b border-gray-100 dark:border-gray-700 last:border-b-0\"\n                >\n                  {typeof suggestion === 'string' ? suggestion : suggestion.display}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Step 2: Select Streets */}\n      {addressLookupStep === \"select\" && (\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium\">{selectedTown}</p>\n              <p className=\"text-xs opacity-70\">{selectedPostcode}</p>\n            </div>\n            <button\n              onClick={resetAddressLookup}\n              className=\"text-xs text-gray-500 hover:text-gray-700 dark:hover:text-gray-300\"\n            >\n              Change\n            </button>\n          </div>\n          \n          <div className=\"max-h-32 overflow-y-auto border border-gray-200 dark:border-gray-800 rounded-lg\">\n            {availableStreets.map((street, index) => (\n              <label key={index} className=\"flex items-center p-2 hover:bg-gray-50 dark:hover:bg-gray-800 border-b border-gray-100 dark:border-gray-700 last:border-b-0\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedStreets.includes(street)}\n                  onChange={() => toggleStreetSelection(street)}\n                  className=\"mr-2\"\n                />\n                <span className=\"text-sm\">{street}</span>\n              </label>\n            ))}\n          </div>\n          \n          {selectedStreets.length > 0 && (\n            <button\n              onClick={importSelectedStreets}\n              className=\"w-full px-3 py-2 rounded-lg bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n            >\n              Import {selectedStreets.length} Street{selectedStreets.length !== 1 ? 's' : ''}\n            </button>\n          )}\n        </div>\n      )}\n\n      <div className=\"flex gap-3 pt-4\">\n        <button \n          type=\"button\"\n          onClick={onCancel}\n          className=\"flex-1 px-4 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction NewStreetForm({ onSubmit, onCancel }) {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    postcode: \"\",\n    properties: \"\"\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.name.trim()) {\n      alert('Please enter a street name');\n      return;\n    }\n    if (!formData.properties.trim()) {\n      alert('Please enter property numbers');\n      return;\n    }\n\n    // Parse property numbers and names (comma separated only)\n    const propertyList = formData.properties\n      .split(',')\n      .map(p => p.trim())\n      .filter(p => p.length > 0);\n\n    if (propertyList.length === 0) {\n      alert('Please enter at least one property number');\n      return;\n    }\n\n    onSubmit({\n      name: formData.name,\n      postcode: formData.postcode,\n      properties: propertyList\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <label className=\"text-xs opacity-70\">Street Name *</label>\n        <input \n          type=\"text\" \n          value={formData.name} \n          onChange={e => setFormData(prev => ({ ...prev, name: e.target.value }))}\n          className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"e.g., Orchard Way\"\n          required\n        />\n      </div>\n      \n      <div>\n        <label className=\"text-xs opacity-70\">Postcode</label>\n        <input \n          type=\"text\" \n          value={formData.postcode} \n          onChange={e => setFormData(prev => ({ ...prev, postcode: e.target.value }))}\n          className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"e.g., IP30 9XX\"\n        />\n      </div>\n\n      <div>\n        <label className=\"text-xs opacity-70\">Property Numbers *</label>\n        <textarea \n          value={formData.properties} \n          onChange={e => setFormData(prev => ({ ...prev, properties: e.target.value }))}\n          className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"Enter property numbers or names separated by commas&#10;e.g., 1, 3, 5, 7, 9&#10;or: 12, 14, 16, 18&#10;or: The Old Post Office, Rose Cottage, 1, 3\"\n          rows={3}\n          required\n        />\n        <div className=\"text-xs text-gray-500 mt-1\">\n          Separate property numbers or names with commas only. Supports house names like \"The Old Post Office\", \"Rose Cottage\"\n        </div>\n      </div>\n\n      <div className=\"flex gap-3\">\n        <button \n          type=\"submit\"\n          className=\"flex-1 px-4 py-2 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n        >\n          Add Street\n        </button>\n        <button \n          type=\"button\"\n          onClick={onCancel}\n          className=\"flex-1 px-4 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n\n// Edit Campaign Form\nfunction EditCampaignForm({ campaign, onSubmit, onCancel }) {\n  const [formData, setFormData] = useState({\n    name: campaign.name,\n    area: campaign.area,\n    connector: campaign.links.connector,\n    quote: campaign.links.quote,\n    booking: campaign.links.booking,\n    faq: campaign.links.faq\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.name.trim()) {\n      alert('Please enter a campaign name');\n      return;\n    }\n    onSubmit(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <label className=\"text-xs opacity-70\">Campaign Name *</label>\n        <input \n          type=\"text\" \n          value={formData.name} \n          onChange={e => setFormData(prev => ({ ...prev, name: e.target.value }))}\n          className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"e.g., Elmswell NL – Aug 2025\"\n          required\n        />\n      </div>\n      \n      <div>\n        <label className=\"text-xs opacity-70\">Postcode Area</label>\n        <input \n          type=\"text\" \n          value={formData.area} \n          onChange={e => setFormData(prev => ({ ...prev, area: e.target.value }))}\n          className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"e.g., IP30\"\n        />\n      </div>\n\n      <div className=\"space-y-2\">\n        <label className=\"text-xs opacity-70\">Campaign Links (Optional)</label>\n        <input \n          type=\"url\" \n          value={formData.connector} \n          onChange={e => setFormData(prev => ({ ...prev, connector: e.target.value }))}\n          className=\"w-full p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"Connector sign-up URL\"\n        />\n        <input \n          type=\"url\" \n          value={formData.quote} \n          onChange={e => setFormData(prev => ({ ...prev, quote: e.target.value }))}\n          className=\"w-full p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"Quote/eligibility form URL\"\n        />\n        <input \n          type=\"url\" \n          value={formData.booking} \n          onChange={e => setFormData(prev => ({ ...prev, booking: e.target.value }))}\n          className=\"w-full p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"Booking page URL\"\n        />\n        <input \n          type=\"url\" \n          value={formData.faq} \n          onChange={e => setFormData(prev => ({ ...prev, faq: e.target.value }))}\n          className=\"w-full p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"FAQ page URL\"\n        />\n      </div>\n\n      <div className=\"flex gap-3\">\n        <button \n          type=\"submit\"\n          className=\"flex-1 px-4 py-2 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n        >\n          Update Campaign\n        </button>\n        <button \n          type=\"button\"\n          onClick={onCancel}\n          className=\"flex-1 px-4 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n\n// Edit Street Form\nfunction EditStreetForm({ street, onSubmit, onCancel }) {\n  const [formData, setFormData] = useState({\n    name: street.name,\n    postcode: street.postcode\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.name.trim()) {\n      alert('Please enter a street name');\n      return;\n    }\n    onSubmit(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <label className=\"text-xs opacity-70\">Street Name *</label>\n        <input \n          type=\"text\" \n          value={formData.name} \n          onChange={e => setFormData(prev => ({ ...prev, name: e.target.value }))}\n          className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"e.g., Orchard Way\"\n          required\n        />\n      </div>\n      \n      <div>\n        <label className=\"text-xs opacity-70\">Postcode</label>\n        <input \n          type=\"text\" \n          value={formData.postcode} \n          onChange={e => setFormData(prev => ({ ...prev, postcode: e.target.value }))}\n          className=\"w-full mt-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n          placeholder=\"e.g., IP30 9XX\"\n        />\n      </div>\n\n      <div className=\"flex gap-3\">\n        <button \n          type=\"submit\"\n          className=\"flex-1 px-4 py-2 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n        >\n          Update Street\n        </button>\n        <button \n          type=\"button\"\n          onClick={onCancel}\n          className=\"flex-1 px-4 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n\n// Property Manager Component\nfunction PropertyManager({ street, onAddProperty, onRemoveProperty, onEditProperty, onClose }) {\n  const [newPropertyLabel, setNewPropertyLabel] = useState(\"\");\n  const [editingProperty, setEditingProperty] = useState(null);\n  const [editLabel, setEditLabel] = useState(\"\");\n\n  const handleAddProperty = (e) => {\n    e.preventDefault();\n    if (!newPropertyLabel.trim()) {\n      alert('Please enter a property label');\n      return;\n    }\n    \n    // Parse comma-separated property labels\n    const propertyLabels = newPropertyLabel\n      .split(',')\n      .map(label => label.trim())\n      .filter(label => label.length > 0);\n    \n    if (propertyLabels.length === 0) {\n      alert('Please enter at least one property label');\n      return;\n    }\n    \n    // Add each property\n    propertyLabels.forEach(label => {\n      onAddProperty(label);\n    });\n    \n    setNewPropertyLabel(\"\");\n  };\n\n  const handleEditProperty = (propertyId, newLabel) => {\n    if (!newLabel.trim()) {\n      alert('Please enter a property label');\n      return;\n    }\n    onEditProperty(propertyId, newLabel.trim());\n    setEditingProperty(null);\n    setEditLabel(\"\");\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Add New Property</h4>\n        <form onSubmit={handleAddProperty} className=\"flex gap-2\">\n          <input \n            type=\"text\" \n            value={newPropertyLabel} \n            onChange={e => setNewPropertyLabel(e.target.value)}\n            className=\"flex-1 p-2 rounded-xl bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm focus:border-primary-400 focus:ring-2 focus:ring-primary-100 dark:focus:ring-primary-900/20 transition-colors\"\n            placeholder=\"Property numbers or names (e.g., 1, 3, 5 or The Old Post Office, Rose Cottage)\"\n          />\n          <button \n            type=\"submit\"\n            className=\"px-4 py-2 rounded-xl bg-primary-600 text-white text-sm hover:bg-primary-700 transition-colors\"\n          >\n            Add\n          </button>\n        </form>\n        <div className=\"text-xs text-gray-500 mt-1\">\n          Separate multiple properties with commas: \"1, 3, 5\" or \"The Old Post Office, Rose Cottage\"\n        </div>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Existing Properties ({street.properties.length})</h4>\n        <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n          {street.properties.map(property => (\n            <div key={property.id} className=\"flex items-center justify-between p-2 rounded-lg bg-gray-50 dark:bg-gray-800\">\n              {editingProperty === property.id ? (\n                <div className=\"flex items-center gap-2 flex-1\">\n                  <input \n                    type=\"text\" \n                    value={editLabel} \n                    onChange={e => setEditLabel(e.target.value)}\n                    className=\"flex-1 p-1 rounded bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-800 text-sm\"\n                    autoFocus\n                  />\n                  <button \n                    onClick={() => handleEditProperty(property.id, editLabel)}\n                    className=\"px-2 py-1 rounded bg-green-600 text-white text-xs hover:bg-green-700\"\n                  >\n                    Save\n                  </button>\n                  <button \n                    onClick={() => {\n                      setEditingProperty(null);\n                      setEditLabel(\"\");\n                    }}\n                    className=\"px-2 py-1 rounded bg-gray-600 text-white text-xs hover:bg-gray-700\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              ) : (\n                <>\n                  <span className=\"text-sm\">{property.label}</span>\n                  <div className=\"flex items-center gap-1\">\n                    <button \n                      onClick={() => {\n                        setEditingProperty(property.id);\n                        setEditLabel(property.label);\n                      }}\n                      className=\"px-2 py-1 rounded bg-blue-600 text-white text-xs hover:bg-blue-700\"\n                    >\n                      Edit\n                    </button>\n                    <button \n                      onClick={() => onRemoveProperty(property.id)}\n                      className=\"px-2 py-1 rounded bg-red-600 text-white text-xs hover:bg-red-700\"\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"flex gap-3 pt-4 border-t border-gray-200 dark:border-gray-800\">\n        <button \n          onClick={onClose}\n          className=\"flex-1 px-4 py-2 rounded-xl bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.jsx'\nimport './styles/index.css'\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n) "],"names":["f","require$$0","k","l","m","n","p","q","c","g","b","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","seedScripts","seedCampaigns","Chip","children","variant","className","variants","jsx","SectionCard","title","Icon","actions","jsxs","Drawer","open","onClose","size","sizes","AnimatePresence","motion","X","App","dark","setDark","useState","view","setView","campaigns","setCampaigns","activeCampaignId","setActiveCampaignId","activeStreetId","setActiveStreetId","activePropertyId","setActivePropertyId","showScripts","setShowScripts","showLinks","setShowLinks","showSettings","setShowSettings","showImportModal","setShowImportModal","showResetModal","setShowResetModal","showNewCampaignModal","setShowNewCampaignModal","showNewStreetModal","setShowNewStreetModal","showImportStreetsModal","setShowImportStreetsModal","showEditCampaignModal","setShowEditCampaignModal","showEditStreetModal","setShowEditStreetModal","showPropertyManagerModal","setShowPropertyManagerModal","editingCampaign","setEditingCampaign","editingStreet","setEditingStreet","showHelp","setShowHelp","showAbout","setShowAbout","showSuccessTips","setShowSuccessTips","isOnline","setIsOnline","addressSearchTerm","setAddressSearchTerm","addressSuggestions","setAddressSuggestions","selectedPostcode","setSelectedPostcode","selectedTown","setSelectedTown","availableStreets","setAvailableStreets","selectedStreets","setSelectedStreets","isLoadingAddresses","setIsLoadingAddresses","addressLookupStep","setAddressLookupStep","activeCampaign","useMemo","activeStreet","activeProperty","stats","letters","convos","interested","followups","outcomes","today","s","droppedToday","spokeToday","resultToday","followUpToday","setProperty","updates","prev","updatedCampaign","newUpdates","totalProperties","total","street","droppedProperties","newStatus","handledProperties","updatedStreets","streetTotalProperties","streetDroppedProperties","streetStatus","streetHandledProperties","toggleDark","d","exportData","data","blob","url","a","importData","file","reader","_a","resetData","confirmReset","emptyCampaigns","createNewCampaign","campaignData","newCampaign","createNewStreet","streetData","newStreet","prop","index","editCampaign","deleteCampaign","campaignId","remainingCampaigns","editStreet","deleteStreet","streetId","remainingStreets","addProperty","propertyLabel","newProperty","removeProperty","propertyId","editPropertyLabel","newLabel","togglePropertyStatus","status","newValue","timestampKey","searchAddresses","searchTerm","response","formattedSuggestions","item","error","selectAddress","suggestion","postcode","streetsResponse","streets","toggleStreetSelection","importSelectedStreets","newStreets","streetName","resetAddressLookup","useEffect","handleOnline","handleOffline","Clock","Database","Sun","Moon","HelpCircle","Settings","NavButton","BarChart3","Target","MapPin","FileText","FolderOpen","Share2","MessageSquare","Link2","Dashboard","Campaigns","id","campaign","property","Streets","propId","PropertyView","Reports","ScriptsPanel","LinksPanel","SettingsPanel","HelpPanel","AboutPanel","SuccessTipsPanel","AlertTriangle","NewCampaignForm","NewStreetForm","ImportStreetsForm","EditCampaignForm","EditStreetForm","PropertyManager","icon","label","active","onClick","Stat","value","sub","onGoStreets","hasData","Home","ChevronRight","UploadCloud","CheckCircle","CalendarClock","Plus","activeId","onSelect","onCreateNew","onEdit","onDelete","onToggleComplete","setSearchTerm","statusFilter","setStatusFilter","sortBy","setSortBy","showFilters","setShowFilters","filteredCampaigns","filtered","matchesSearch","matchesStatus","Search","onSelectStreet","onOpenProperty","onAddStreet","onEditStreet","onDeleteStreet","onManageProperties","onImportStreets","filteredStreets","buttonStyle","ToggleRow","onChange","onBack","onUpdate","onShowScripts","onShowLinks","onToggleStatus","showFollowUp","setShowFollowUp","notes","setNotes","ActionButton","Check","OutcomeButton","FollowUpModal","dt","current","isActive","variantStyles","onSave","date","setDate","time","setTime","tab","setTab","tabs","items","t","links","linkRows","r","idx","onToggleDark","onExport","onImport","onReset","selectedFile","setSelectedFile","handleFileSelect","event","Shield","Download","Upload","Trash2","Info","LogOut","expandedSections","setExpandedSections","toggleSection","section","sortColumn","setSortColumn","sortDirection","setSortDirection","flat","latestActivity","latestActivityType","filteredAndSortedData","aVal","bVal","handleSort","column","SortIcon","ChevronUp","ChevronDown","getSortButtonClass","baseClass","totals","ListChecks","Filter","i","onSubmit","onCancel","formData","setFormData","handleSubmit","propertyList","onAddProperty","onRemoveProperty","onEditProperty","newPropertyLabel","setNewPropertyLabel","editingProperty","setEditingProperty","editLabel","setEditLabel","handleAddProperty","propertyLabels","handleEditProperty","Fragment","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,1,2]}